define(function(require){return {"files":{"src\\components\\colorgrid\\NormalRenderer.jsx.js":{"name":"src\\components\\colorgrid\\NormalRenderer.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\components\\dialog\\Alert.jsx.js":{"name":"src\\components\\dialog\\Alert.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\components\\dialog\\Confirm.jsx.js":{"name":"src\\components\\dialog\\Confirm.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\components\\dropdownColorPicker\\NormalRenderer.jsx.js":{"name":"src\\components\\dropdownColorPicker\\NormalRenderer.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\components\\list\\CascadeRender.jsx.js":{"name":"src\\components\\list\\CascadeRender.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\components\\list\\NormalRenderer.jsx.js":{"name":"src\\components\\list\\NormalRenderer.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\components\\list\\SelectableRenderer.jsx.js":{"name":"src\\components\\list\\SelectableRenderer.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\components\\region\\NormalProvince.jsx.js":{"name":"src\\components\\region\\NormalProvince.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\components\\region\\NormalRegion.jsx.js":{"name":"src\\components\\region\\NormalRegion.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\components\\region\\StatisticsProvince.jsx.js":{"name":"src\\components\\region\\StatisticsProvince.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\components\\schedule\\NormalLegendRenderer.jsx.js":{"name":"src\\components\\schedule\\NormalLegendRenderer.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\components\\schedule\\NormalValueRenderer.jsx.js":{"name":"src\\components\\schedule\\NormalValueRenderer.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\components\\tab\\NormalRenderer.jsx.js":{"name":"src\\components\\tab\\NormalRenderer.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\components\\table\\ButtonRenderer.jsx.js":{"name":"src\\components\\table\\ButtonRenderer.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\components\\table\\Expander.jsx.js":{"name":"src\\components\\table\\Expander.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\components\\table\\MessageBar.jsx.js":{"name":"src\\components\\table\\MessageBar.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\components\\table\\NoDataRenderer.jsx.js":{"name":"src\\components\\table\\NoDataRenderer.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\components\\table\\NormalHeader.jsx.js":{"name":"src\\components\\table\\NormalHeader.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\components\\table\\NormalRenderer.jsx.js":{"name":"src\\components\\table\\NormalRenderer.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\components\\table\\NumberRenderer.jsx.js":{"name":"src\\components\\table\\NumberRenderer.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\components\\table\\SelectorInHeader.jsx.js":{"name":"src\\components\\table\\SelectorInHeader.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\components\\table\\SelectorInTBody.jsx.js":{"name":"src\\components\\table\\SelectorInTBody.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\components\\tree\\NormalRenderer.jsx.js":{"name":"src\\components\\tree\\NormalRenderer.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\components\\tree\\SelectRenderer.jsx.js":{"name":"src\\components\\tree\\SelectRenderer.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\components\\uploader\\UploaderCore.jsx.js":{"name":"src\\components\\uploader\\UploaderCore.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\core\\calendarTools.js":{"name":"src\\core\\calendarTools.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\core\\colorPickerTools.js":{"name":"src\\core\\colorPickerTools.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\core\\componentTools.js":{"name":"src\\core\\componentTools.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\core\\layerTools.js":{"name":"src\\core\\layerTools.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\core\\numberboxTools.js":{"name":"src\\core\\numberboxTools.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\core\\regionTools.js":{"name":"src\\core\\regionTools.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\core\\scheduleTools.js":{"name":"src\\core\\scheduleTools.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\core\\shojiScreenTools.js":{"name":"src\\core\\shojiScreenTools.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\core\\sliderTools.js":{"name":"src\\core\\sliderTools.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\core\\tableTools.js":{"name":"src\\core\\tableTools.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\core\\treeTools.js":{"name":"src\\core\\treeTools.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\core\\util.js":{"name":"src\\core\\util.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\core\\validationTools.js":{"name":"src\\core\\validationTools.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\core\\validations.js":{"name":"src\\core\\validations.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\enterprise\\ArraySelector.jsx.js":{"name":"src\\enterprise\\ArraySelector.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\enterprise\\DualTreeSelector.jsx.js":{"name":"src\\enterprise\\DualTreeSelector.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\enterprise\\SelectWithFilter.jsx.js":{"name":"src\\enterprise\\SelectWithFilter.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\enterprise\\Uploader.jsx.js":{"name":"src\\enterprise\\Uploader.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\factories\\colorGridFactory.jsx.js":{"name":"src\\factories\\colorGridFactory.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\mixins\\DragableWidget.js":{"name":"src\\mixins\\DragableWidget.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\mixins\\InputWidget.js":{"name":"src\\mixins\\InputWidget.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\mixins\\InputWidgetImeFixed.js":{"name":"src\\mixins\\InputWidgetImeFixed.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\mixins\\InputWidgetImeFixedForPreactIE.js":{"name":"src\\mixins\\InputWidgetImeFixedForPreactIE.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\mixins\\TreeNodeBase.js":{"name":"src\\mixins\\TreeNodeBase.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\mixins\\WidgetWithFixedDom.js":{"name":"src\\mixins\\WidgetWithFixedDom.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\AlphabetRegion.jsx.js":{"name":"src\\AlphabetRegion.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\Button.jsx.js":{"name":"src\\Button.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\Calendar.jsx.js":{"name":"src\\Calendar.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\CheckBox.jsx.js":{"name":"src\\CheckBox.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\ColorGrid.jsx.js":{"name":"src\\ColorGrid.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\ColorPicker.jsx.js":{"name":"src\\ColorPicker.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\ComboList.jsx.js":{"name":"src\\ComboList.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\Crumb.jsx.js":{"name":"src\\Crumb.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\DeployablePanel.jsx.js":{"name":"src\\DeployablePanel.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\Dialog.jsx.js":{"name":"src\\Dialog.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\DropDownCalendar.jsx.js":{"name":"src\\DropDownCalendar.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\DropDownColorPicker.jsx.js":{"name":"src\\DropDownColorPicker.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\DropDownList.jsx.js":{"name":"src\\DropDownList.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\DropDownRegion.jsx.js":{"name":"src\\DropDownRegion.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\DualTreeSelector.jsx.js":{"name":"src\\DualTreeSelector.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\Form.jsx.js":{"name":"src\\Form.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\Layer.jsx.js":{"name":"src\\Layer.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\List.jsx.js":{"name":"src\\List.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\Message.jsx.js":{"name":"src\\Message.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\NumberBox.jsx.js":{"name":"src\\NumberBox.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\Pager.jsx.js":{"name":"src\\Pager.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\Radio.jsx.js":{"name":"src\\Radio.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\RangeCalendar.jsx.js":{"name":"src\\RangeCalendar.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\Region.jsx.js":{"name":"src\\Region.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\Schedule.jsx.js":{"name":"src\\Schedule.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\SearchBox.jsx.js":{"name":"src\\SearchBox.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\Select.jsx.js":{"name":"src\\Select.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\ShojiScreen.jsx.js":{"name":"src\\ShojiScreen.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\Skin.jsx.js":{"name":"src\\Skin.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\Slider.jsx.js":{"name":"src\\Slider.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\Switch.jsx.js":{"name":"src\\Switch.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\Tab.jsx.js":{"name":"src\\Tab.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\Table.jsx.js":{"name":"src\\Table.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\TextArea.jsx.js":{"name":"src\\TextArea.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\TextBox.jsx.js":{"name":"src\\TextBox.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\TextLine.jsx.js":{"name":"src\\TextLine.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\Tip.jsx.js":{"name":"src\\Tip.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\TitleWindow.jsx.js":{"name":"src\\TitleWindow.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\Toast.jsx.js":{"name":"src\\Toast.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\Tree.jsx.js":{"name":"src\\Tree.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\WarningLayer.jsx.js":{"name":"src\\WarningLayer.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"src\\Wizard.jsx.js":{"name":"src\\Wizard.jsx.js","modules":{},"classes":{},"fors":{},"namespaces":{}}},"classitems":[{"file":"ColorGrid 默认渲染器","line":1,"author":"Wang Yi","email":"wangyispaceman@gmail.com","version":"0.0.2.2","class":""},{"file":"src\\components\\dialog\\Alert.jsx.js","line":1,"description":"Dialog Alert渲染器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\components\\dialog\\Alert.jsx.js","line":15,"properties":"","params":[{"name":"message","description":"显示在主区域的内容","type":"String"},{"name":"onClick","description":"通知外部关闭的回调","type":"Function"}],"class":""},{"file":"src\\components\\dialog\\Confirm.jsx.js","line":1,"description":"Dialog Confirm渲染器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\components\\dialog\\Confirm.jsx.js","line":15,"properties":"","params":[{"name":"message","description":"主区域显示的内容","type":"String"},{"name":"onEnter","description":"点击确定的回调","type":"Function"},{"name":"onCancel","description":"点击取消的回调","type":"Function"}],"class":""},{"file":"src\\components\\dropdownColorPicker\\NormalRenderer.jsx.js","line":1,"description":"下拉颜色选择器-默认渲染器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.2","class":""},{"file":"src\\components\\list\\CascadeRender.jsx.js","line":1,"description":"Cascade Item默认级联菜单渲染器","author":"Chen Xiao","class":""},{"file":"src\\components\\list\\CascadeRender.jsx.js","line":11,"properties":"","params":[{"name":"label","description":"item上显示的内容","type":"String"},{"name":"value","description":"item代表的值","type":"String"},{"name":"disabled","description":"item是否处于禁用状态","type":"Boolean"},{"name":"onClick","description":"点击后的回调","type":"Function"}],"attention":"<ListItemObject>中所有数据型属性（即不包含方法）都会传入List Item props，但disabled和onClick会被覆盖","class":""},{"file":"src\\components\\list\\CascadeRender.jsx.js","line":34,"fire":"List onClick","params":[{"name":"e","description":"React事件对象","type":"SyntheticEvent","props":[{"name":"target","description":"List Item的根容器","type":"HtmlElement","props":[{"name":"value","description":"对应ListItemObject.value","type":"String"}]}]}],"class":""},{"file":"src\\components\\list\\NormalRenderer.jsx.js","line":1,"description":"List Item默认渲染器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\components\\list\\NormalRenderer.jsx.js","line":14,"properties":"","params":[{"name":"label","description":"item上显示的内容","type":"String"},{"name":"value","description":"item代表的值","type":"String"},{"name":"disabled","description":"item是否处于禁用状态","type":"Boolean"},{"name":"onClick","description":"点击后的回调","type":"Function"}],"attention":"<ListItemObject>中所有数据型属性（即不包含方法）都会传入List Item props，但disabled和onClick会被覆盖","class":""},{"file":"src\\components\\list\\NormalRenderer.jsx.js","line":35,"fire":"List onClick","params":[{"name":"e","description":"React事件对象","type":"SyntheticEvent","props":[{"name":"target","description":"List Item的根容器","type":"HtmlElement","props":[{"name":"value","description":"对应ListItemObject.value","type":"String"}]}]}],"class":""},{"file":"带选择状态的List渲染器","line":1,"author":"mahaina","date":"2016/11/16.","class":""},{"file":"src\\components\\list\\SelectableRenderer.jsx.js","line":13,"properties":"","params":[{"name":"label","description":"item上显示的内容","type":"String"},{"name":"value","description":"item代表的值","type":"String"},{"name":"disabled","description":"item是否处于禁用状态","type":"Boolean"},{"name":"isSelected","description":"选中设置方法一：当前项是否被选中","type":"String"},{"name":"onClick","description":"点击后的回调","type":"Function"}],"attention":"<ListItemObject>中所有数据型属性（即不包含方法）都会传入List Item props，但disabled和onClick会被覆盖","class":""},{"file":"src\\components\\list\\SelectableRenderer.jsx.js","line":36,"fire":"List onClick","params":[{"name":"e","description":"React事件对象","type":"SyntheticEvent","props":[{"name":"target","description":"List Item的根容器","type":"HtmlElement","props":[{"name":"value","description":"对应ListItemObject.value","type":"String"}]}]}],"class":""},{"file":"src\\components\\region\\NormalProvince.jsx.js","line":1,"description":"Region 省级渲染器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\components\\region\\NormalProvince.jsx.js","line":21,"properties":"","params":[{"name":"id","description":"省所属的编号","type":"Number"},{"name":"value","description":"Region组件转译后的value，以省市编号为key，有哪个key，代表哪个地区被选中","type":"Object"},{"name":"parent","description":"渲染器所属的Region组件实例","type":"ReactComponent"},{"name":"disabled","description":"渲染器是否处于禁用状态","type":"Boolean"},{"name":"type","description":"渲染器的选择状态，'single'表示单选，其他为多选","type":"String"},{"name":"onChange","description":"选择状态改变后的回调","type":"Function"}],"class":""},{"file":"src\\components\\region\\NormalRegion.jsx.js","line":1,"description":"Region 大区域渲染器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\components\\region\\NormalRegion.jsx.js","line":18,"properties":"","params":[{"name":"id","description":"省所属的编号","type":"Number"},{"name":"value","description":"Region组件转译后的value，以省市编号为key，有哪个key，代表哪个地区被选中","type":"Object"},{"name":"parent","description":"渲染器所属的Region组件实例","type":"ReactComponent"},{"name":"disabled","description":"渲染器是否处于禁用状态","type":"Boolean"},{"name":"type","description":"渲染器的选择状态，'single'表示单选，其他为多选","type":"String"},{"name":"onChange","description":"选择状态改变后的回调","type":"Function"}],"class":""},{"file":"src\\components\\region\\StatisticsProvince.jsx.js","line":1,"description":"Region 带有汇总信息的省渲染器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2","class":""},{"file":"src\\components\\region\\StatisticsProvince.jsx.js","line":22,"properties":"","params":[{"name":"id","description":"省所属的编号","type":"Number"},{"name":"value","description":"Region组件转译后的value，以省市编号为key，有哪个key，代表哪个地区被选中","type":"Object"},{"name":"parent","description":"渲染器所属的Region组件实例","type":"ReactComponent"},{"name":"disabled","description":"渲染器是否处于禁用状态","type":"Boolean"},{"name":"type","description":"渲染器的选择状态，'single'表示单选，其他为多选","type":"String"},{"name":"onChange","description":"选择状态改变后的回调","type":"Function"}],"class":""},{"file":"src\\components\\schedule\\NormalLegendRenderer.jsx.js","line":1,"description":"时间选择器悬浮图例渲染器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\components\\schedule\\NormalLegendRenderer.jsx.js","line":15,"properties":"","params":[{"name":"axis","description":"鼠标所在的格子坐标对象，笛卡尔坐标系","type":"Object","props":[{"name":"x","description":"横坐标，有效区间[0, 23]","type":"Number"},{"name":"y","description":"纵坐标，有效区间[0, 6]","type":"Number"}]},{"name":"value","description":"等同于schedule.props.value","type":"String"},{"name":"parentComponent","description":"时间选择器实例","type":"ReactComponent"}],"class":""},{"file":"src\\components\\schedule\\NormalValueRenderer.jsx.js","line":1,"description":"时间选择器值默认渲染器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\components\\schedule\\NormalValueRenderer.jsx.js","line":16,"properties":"","params":[{"name":"prepare","description":"等同于schedule.props.valuePrepare","type":"Function"},{"name":"value","description":"等同于schedule.props.value","type":"String"},{"name":"parentComponent","description":"时间选择器实例","type":"ReactComponent"}],"class":""},{"file":"src\\components\\schedule\\NormalValueRenderer.jsx.js","line":37,"fire":"schedule valuePrepare","params":[{"name":"param","description":"回调对象","type":"Object","props":[{"name":"style","description":"渲染value的样式对象","type":"Object"},{"name":"text","description":"将要显示的文本","type":"String"},{"name":"day","description":"value块所在星期","type":"Number"},{"name":"begin","description":"value块起始时间","type":"Number"},{"name":"end","description":"value块结束时间","type":"Number"}]}],"class":""},{"file":"src\\components\\tab\\NormalRenderer.jsx.js","line":1,"description":"Tab 普通渲染器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2","class":""},{"file":"src\\components\\tab\\NormalRenderer.jsx.js","line":15,"properties":"","params":[{"name":"className","description":"挂接在渲染器根容器上的类","type":"String"},{"name":"label","description":"渲染器显示的内容","type":"String"},{"name":"value","description":"渲染器的值","type":"String"},{"name":"onClick","description":"渲染器被点击后的回调","type":"Function"}],"attention":"<ListItemObject>中所有数据属性都会灌入此渲染器的props中，onClick除外","class":""},{"file":"src\\components\\table\\ButtonRenderer.jsx.js","line":1,"description":"Table 带icon按钮的单元格渲染器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\components\\table\\ButtonRenderer.jsx.js","line":13,"properties":"","params":[{"name":"className","description":"加在单元格td上的类","type":"String"},{"name":"style","description":"加在单元格td上的样式表","type":"Object"},{"name":"row","description":"单元格行索引","type":"Number"},{"name":"column","description":"单元格列索引","type":"Number"},{"name":"buttonIcon","description":"按钮图标","type":"String"},{"name":"buttonLabel","description":"按钮文字","type":"String"},{"name":"command","description":"按钮命令","type":"String"},{"name":"onAction","description":"表格回调总线","type":"Function"}],"attention":"对于所有单元格渲染器，传入的props格式是一致的，具体见src\\core\\tableTools.js","class":""},{"file":"src\\components\\table\\ButtonRenderer.jsx.js","line":35,"fire":"table onAction","params":[{"name":"type","description":"ButtonRendererClick: 单元格内的icon被点击；<TableFieldObject>.renderer = ButtonRenderer","type":"String"},{"name":"param","description":"","type":"Object","props":[{"name":"item","description":"单元格所在行数据源，param1 = 'ButtonRendererClick'","type":"Object"},{"name":"row","description":"单元格行号，param1 = 'ButtonRendererClick'","type":"Number"},{"name":"column","description":"单元格列号，param1 = 'ButtonRendererClick'","type":"Number"},{"name":"command","description":"按钮代表的命令","type":"String"}]}],"class":""},{"file":"src\\components\\table\\Expander.jsx.js","line":1,"description":"Table 有折叠功能的单元格渲染器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\components\\table\\Expander.jsx.js","line":16,"properties":"","params":[{"name":"style","description":"加在单元格td上的样式表","type":"Object"},{"name":"item","description":"单元格所在行的数据源","type":"Object"},{"name":"tableExpandId","description":"表格当前展开状态标识","type":"Number"},{"name":"onAction","description":"表格回调总线","type":"Function"}],"class":""},{"file":"src\\components\\table\\Expander.jsx.js","line":39,"fire":"table onAction","params":[{"name":"type","description":"TableExpanderClick: 表格某行的展开按钮被点击；<TableFieldObject>.renderer = Expander","type":"String"},{"name":"param","description":"","type":"Object","props":[{"name":"expandId","description":"操作行数据源中的expandId值，param1 = 'TableExpanderClick'","type":"String"},{"name":"expanded","description":"操作后该行的展开状态，param1 = 'TableExpanderClick'","type":"Boolean"}]}],"class":""},{"file":"src\\components\\table\\MessageBar.jsx.js","line":1,"description":"Table 信息栏渲染器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\components\\table\\MessageBar.jsx.js","line":12,"properties":"","params":[{"name":"message","description":"信息栏显示的内容","type":"String"},{"name":"buttonLabel","description":"信息栏按钮的文本，如果为空将不显示此按钮","type":"String"},{"name":"colSpan","description":"信息栏横跨单元格个数","type":"Number"},{"name":"onClick","description":"按钮点击回调，即table.props.onAction","type":"Function"}],"class":""},{"file":"src\\components\\table\\MessageBar.jsx.js","line":28,"fire":"table onAction","params":[{"name":"type","description":"TableMessageBarClick: 表头下部信息栏被点击","type":"String"}],"class":""},{"file":"src\\components\\table\\NoDataRenderer.jsx.js","line":1,"description":"Table 无数据渲染器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\components\\table\\NoDataRenderer.jsx.js","line":13,"properties":"","params":[{"name":"tableComponent","description":"table实例","type":"ReactComponent"}],"class":""},{"file":"src\\components\\table\\NormalHeader.jsx.js","line":1,"description":"Table 普通表头渲染器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\components\\table\\NormalHeader.jsx.js","line":18,"properties":"","params":[{"name":"fieldConfig","description":"表头所在列的配置信息","type":"Object"},{"name":"tableComponent","description":"表格实例","type":"ReactComponent"}],"class":""},{"file":"src\\components\\table\\NormalRenderer.jsx.js","line":1,"description":"Table 普通单元格渲染器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\components\\table\\NormalRenderer.jsx.js","line":10,"properties":"","params":[{"name":"className","description":"加在单元格td上的类","type":"String"},{"name":"style","description":"加在单元格td上的样式表","type":"String"},{"name":"title","description":"td鼠标悬浮上的提示","type":"String"},{"name":"content","description":"单元格中显示的内容","type":"String"}],"class":""},{"file":"src\\components\\table\\NumberRenderer.jsx.js","line":1,"description":"Table 数值型单元格渲染器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\components\\table\\NumberRenderer.jsx.js","line":12,"properties":"","params":[{"name":"className","description":"加在单元格td上的类","type":"String"},{"name":"style","description":"加在单元格td上的样式表","type":"String"},{"name":"content","description":"单元格中显示的内容","type":"String"},{"name":"renderType","description":"数字显示类型：\n    int：整形\n  float：浮点\npercent：百分比","type":"String"},{"name":"fixed","description":"显示保留的小数位数，renderType = 'int' 时无效","type":"Number"}],"class":""},{"file":"src\\components\\table\\SelectorInHeader.jsx.js","line":1,"description":"Table 有选择功能的表头渲染器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\components\\table\\SelectorInHeader.jsx.js","line":43,"properties":"","params":[{"name":"fieldConfig","description":"当前列配置","type":"Object"},{"name":"tableComponent","description":"table实例对象","type":"ReactComponent"},{"name":"datasource","description":"选择器下拉菜单数据源","type":"Array.<ListItemObject>"}],"class":""},{"file":"src\\components\\table\\SelectorInTBody.jsx.js","line":1,"description":"Table 有选择功能的单元格渲染器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\components\\table\\SelectorInTBody.jsx.js","line":16,"properties":"","params":[{"name":"___isRowSelected___","description":"行选择状态：\n-1: 未选择\n 0: 选择\n 1: 半选择 （有倒霉的业务需要半选择状态，这个一般跟有折叠功能的表格一起使用）","type":"Number"},{"name":"disabled","description":"是否禁用行选择，可通过fieldConfig的prepare方法灌入","type":"Boolean"},{"name":"className","description":"单元格的样式，可通过fieldConfig的prepare方法灌入","type":"String"},{"name":"onRowSelect","description":"回调函数，一般为table.props.onAction","type":"Function"}],"class":""},{"file":"src\\components\\tree\\NormalRenderer.jsx.js","line":1,"description":"Tree Item默认渲染器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\components\\tree\\NormalRenderer.jsx.js","line":17,"properties":"","params":[{"name":"index","description":"叶子序列，通过此序列，可以从datasource中依次访问找到叶子的数据源","type":"String"},{"name":"item","description":"叶子对应的数据源","type":"Object"},{"name":"treeComponent","description":"叶子所在树的实例","type":"ReactComponent"},{"name":"disabled","description":"叶子是否在禁用状态","type":"Boolean"},{"name":"onAction","description":"回调接口","type":"Function"}],"class":""},{"file":"src\\components\\tree\\NormalRenderer.jsx.js","line":41,"fire":"Tree onAction","params":[{"name":"type","description":"TreeLeafClick：树节点被点击；leafRenderer = NormalRenderer","type":"String"},{"name":"param","description":"","type":"Object","props":[{"name":"item","description":"叶子对应的数据源；param1 = 'TreeLeafClick'","type":"Object"},{"name":"index","description":"叶子序列","type":"Array.<String>"}]}],"class":""},{"file":"src\\components\\tree\\SelectRenderer.jsx.js","line":1,"description":"Tree 有选择功能的Item渲染器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2","class":""},{"file":"src\\components\\tree\\SelectRenderer.jsx.js","line":18,"properties":"","params":[{"name":"index","description":"叶子序列，通过此序列，可以从datasource中依次访问找到叶子的数据源","type":"String"},{"name":"item","description":"叶子对应的数据源","type":"Object"},{"name":"treeComponent","description":"叶子所在树的实例","type":"ReactComponent"},{"name":"disabled","description":"叶子是否在禁用状态","type":"Boolean"},{"name":"onAction","description":"回调接口","type":"Function"}],"class":""},{"file":"src\\components\\tree\\SelectRenderer.jsx.js","line":40,"fire":"Tree onAction","params":[{"name":"type","description":"TreeSelectLeaf：选择树节点；leafRenderer = SelectRenderer","type":"String"},{"name":"param","description":"","type":"Object","props":[{"name":"e","description":"React事件对象；param1 = 'TreeSelectLeaf' || 'TreeUnselectLeaf'","type":"SyntheticEvent"}]}],"class":""},{"file":"src\\components\\tree\\SelectRenderer.jsx.js","line":46,"fire":"Tree onAction","params":[{"name":"type","description":"TreeUnselectLeaf：取消选择树节点；leafRenderer = SelectRenderer","type":"String"}],"class":""},{"file":"src\\components\\uploader\\UploaderCore.jsx.js","line":1,"description":"实际负责上传的子组件，添加到body中，不可见","author":"Sun Wenfei","version":"0.0.2.1","class":""},{"file":"src\\core\\calendarTools.js","line":1,"description":"Calendar 工具集","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\core\\calendarTools.js","line":12,"description":"分割日期","interface":"cutValues","params":[{"name":"value","description":"日期串，如：YYYY-MM-DD;YYYY-MM-DD","type":"String"}],"return":{"description":"分割后的日期对象","type":"CalendarValues"},"class":""},{"file":"src\\core\\calendarTools.js","line":18,"structure":"CalendarValues","params":[{"name":"___v1","description":"输入串中日期靠前的Date实例","type":"Date"},{"name":"___v2","description":"输入串中日期靠后的Date实例","type":"Date"},{"name":"value1","description":"输入串中日期靠前的半部分","type":"String"},{"name":"value2","description":"输入串中日期靠后的半部分","type":"String"}],"class":""},{"file":"src\\core\\calendarTools.js","line":41,"description":"字符串转日期","interface":"str2date","params":[{"name":"str","description":"日期字符串，要求年月日之间必须以'-'分割。","type":"String"}],"return":{"description":"对应日期","type":"Date"},"class":""},{"file":"src\\core\\calendarTools.js","line":65,"description":"比较日期","interface":"compareDate","params":[{"name":"a","description":"日期A","type":"Date"},{"name":"b","description":"日期B","type":"Date"}],"return":{"description":"日期比较结果：-1，a在b之前；0，a和b是同一天；1，a在b之后","type":"Number"},"class":""},{"file":"src\\core\\calendarTools.js","line":82,"description":"获取某月最后一天","interface":"getLastDayInMonth","params":[{"name":"year","description":"年份","type":"String|Number"},{"name":"month","description":"月份","type":"String|Number"}],"return":{"description":"该月的最后一天日期实例","type":"Date"},"class":""},{"file":"src\\core\\calendarTools.js","line":99,"description":"获取某月第一天","interface":"getLastDayInMonth","params":[{"name":"year","description":"年份","type":"String|Number"},{"name":"month","description":"月份","type":"String|Number"}],"return":{"description":"该月第一天日期实例","type":"Date"},"class":""},{"file":"src\\core\\calendarTools.js","line":109,"description":"某月是否在指定区间内","interface":"monthInRange","params":[{"name":"year","description":"年份","type":"String|Number"},{"name":"month","description":"月份","type":"String|Number"},{"name":"min","description":"日期区间左值，格式：YYYY-MM-DD","type":"String"},{"name":"max","description":"日期区间右值，格式：YYYY-MM-DD","type":"String"}],"return":{"description":"某月是否在给定区间内","type":"Boolean"},"class":""},{"file":"src\\core\\calendarTools.js","line":126,"description":"获取今天","interface":"getDataRange.today","return":{"description":"日期区间","type":"CalendarRangeData"},"class":""},{"file":"src\\core\\calendarTools.js","line":131,"structure":"CalendarRangeData","params":[{"name":"value1","description":"日期区间左值","type":"Date"},{"name":"value2","description":"日期区间右值","type":"Date"}],"class":""},{"file":"src\\core\\calendarTools.js","line":144,"description":"获取昨天","interface":"getDataRange.yesterday","return":{"description":"日期区间","type":"CalendarRangeData"},"class":""},{"file":"src\\core\\calendarTools.js","line":158,"description":"获取前天","interface":"getDataRange.beforeYesterday","return":{"description":"日期区间","type":"CalendarRangeData"},"class":""},{"file":"src\\core\\calendarTools.js","line":172,"description":"获取上一周","interface":"getDataRange.lastWeek","return":{"description":"日期区间","type":"CalendarRangeData"},"class":""},{"file":"src\\core\\calendarTools.js","line":188,"description":"获取过去7天","interface":"getDataRange.last7","return":{"description":"日期区间","type":"CalendarRangeData"},"class":""},{"file":"src\\core\\calendarTools.js","line":203,"description":"获取过去14天","interface":"getDataRange.last14","return":{"description":"日期区间","type":"CalendarRangeData"},"class":""},{"file":"src\\core\\calendarTools.js","line":218,"description":"获取过去30天","interface":"getDataRange.last30","return":{"description":"日期区间","type":"CalendarRangeData"},"class":""},{"file":"src\\core\\calendarTools.js","line":233,"description":"获取当前月","interface":"getDataRange.currentMonth","return":{"description":"日期区间","type":"CalendarRangeData"},"class":""},{"file":"src\\core\\calendarTools.js","line":247,"description":"获取上月","interface":"getDataRange.lastMonth","return":{"description":"日期区间","type":"CalendarRangeData"},"class":""},{"file":"src\\core\\calendarTools.js","line":263,"description":"获取上季度","interface":"getDataRange.lastQuarter","return":{"description":"日期区间","type":"CalendarRangeData"},"class":""},{"file":"src\\core\\colorPickerTools.js","line":1,"description":"ColorPicker 工具集","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\core\\colorPickerTools.js","line":11,"description":"RGB颜色转CSS串","interface":"RGB2CSS","params":[{"name":"r","description":"红色0 - 255","type":"Number"},{"name":"g","description":"绿色0 - 255","type":"Number"},{"name":"b","description":"蓝色0 - 255","type":"Number"}],"return":{"description":"CSS颜色串，#FFFFFF","type":"String"},"class":""},{"file":"src\\core\\colorPickerTools.js","line":29,"description":"CSS串转RGB颜色","interface":"CSS2RGB","params":[{"name":"s","description":"CSS颜色#000000，必须是6位","type":"String"}],"return":{"description":"RGB颜色数组，0-255","type":"Array.<number>"},"class":""},{"file":"src\\core\\colorPickerTools.js","line":43,"description":"HSL颜色转RGB颜色","interface":"HSL2RGB","params":[{"name":"h","description":"色相","type":"Number"},{"name":"s","description":"饱和度","type":"Number"},{"name":"l","description":"亮度","type":"Number"}],"return":{"description":"RGB颜色数组，0-255","type":"Array.<number>"},"class":""},{"file":"src\\core\\colorPickerTools.js","line":74,"description":"RGB颜色转HSL颜色","interface":"RGB2HSL","params":[{"name":"r","description":"红色0 - 255","type":"Number"},{"name":"g","description":"绿色0 - 255","type":"Number"},{"name":"b","description":"蓝色0 - 255","type":"Number"}],"return":{"description":"HSL颜色数组，0-1","type":"Array.<number>"},"class":""},{"file":"src\\core\\componentTools.js","line":1,"description":"组件公共方法","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\core\\componentTools.js","line":23,"description":"一个空函数","interface":"noop","return":{"description":"空函数","type":"Function"},"class":""},{"file":"src\\core\\componentTools.js","line":30,"description":"从props和props.style中取值","params":[{"name":"props","description":"实例属性结合","type":"Object"},{"name":"key","description":"要查找的键","type":"String"},{"name":"defaultValue","description":"如果props[key]和props.style[key]都不存在，返回此值","type":"Any"}],"return":{"description":"待查找的值","type":"Any"},"interface":"getValueFromPropsAndStyle","class":""},{"file":"src\\core\\componentTools.js","line":44,"description":"弹出Layer方法工厂","params":[{"name":"me","description":"包含Layer组件的组件实例","type":"ReactComponent"},{"name":"flag","description":"控制Layer显示隐藏的开关名称，此开关必须在me的state中","type":"String"}],"return":{"description":"弹出Layer的方法","type":"Function"},"interface":"openLayerHandlerFactory","class":""},{"file":"src\\core\\componentTools.js","line":60,"description":"关闭Layer方法工厂","params":[{"name":"me","description":"包含Layer组件的组件实例","type":"ReactComponent"},{"name":"flag","description":"控制Layer显示隐藏的开关名称，此开关必须在me的state中","type":"String"},{"name":"layerRef","description":"layer的ref属性值","type":"String"}],"return":{"description":"关闭Layer的方法","type":"Function"},"interface":"closeLayerHandlerFactory","class":""},{"file":"src\\core\\componentTools.js","line":80,"description":"创建组件根容器通用属性集","params":[{"name":"type","description":"组件类型","type":"String"},{"name":"me","description":"组件实例","type":"Object"},{"name":"options","description":"配置项","type":"Object","props":[{"name":"mergeFromProps","description":"导入配置。\n此配置中的字符串代表me.props的key，所有me.props[key]将被复制到result中。若result中已经存在key，则跳过。","type":"Array.<String>"},{"name":"merge","description":"合并配置。\noptions.merge最终将与result合并，冲突的键不合并。此配置优先级低于options.mergeFromProps。","type":"Object"},{"name":"widthCorrect","description":"宽度校准，当组件设置宽度时，由于存在padding，可能导致实际尺寸比设置的\n大，通过这一个修正值，把宽度减少回去","type":"Number"}]}],"return":{"description":"根容器通用属性集","type":"Object"},"interface":"containerBaseProps","class":""},{"file":"src\\core\\componentTools.js","line":94,"properties":"","params":[{"name":"ref","description":"组件根容器索引，默认为'container'","type":"String"},{"name":"skin","description":"组件皮肤此属性最终加在组件根容器的class上，例如：fcui2-componentname-skinname","type":"String"},{"name":"className","description":"外接class此属性最终加在组件根容器的class上","type":"String"},{"name":"style","description":"外接style此属性最终加在组件根容器的style上","type":"Object"},{"name":"disabled","description":"组件是否可用","type":"Boolean"}],"class":""},{"file":"src\\core\\layerTools.js","line":1,"description":"Layer 工具集","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\core\\layerTools.js","line":12,"description":"计算Layer的位置","interface":"getLayerPosition","params":[{"name":"layer","description":"浮层dom容器","type":"HtmlElement"},{"name":"anchor","description":"锚点dom","type":"HtmlElement"},{"name":"layerLocation","description":"浮层显示位置配置","type":"String"}],"return":{"description":"显示结果","type":"LayerPosition"},"note":"####layerLocation配置说明\n\n#####1 展开方向配置：展开方向配置有自适应的功能，比如左侧展不开，就向右展开。\n\n######1.1 字段含义\n*     top：从anchor的上边框向上展开layer，展开后layer下边框与anchor上边框重合\n*  bottom：从anchor的下边框向下展开layer，展开后layer上边框与anchor下边框重合\n*    left：从anchor的右边框向左展开layer，展开后layer右边框与anchor右边框在一条线上\n*   right：从anchor的左边框向右展开layer，展开后layer左边框与anchor左边框在一条线上\n     \n######1.2 解析原则\n1.2.1\n\ntop和bottom是一对，放在一起分析，与left、right无关。\n1.2.2\n如果配置中只包含top，不包含bottom，则按照top形式展开，此时没有自适应功能，反之亦然；left、right类似。\n\n1.2.3\n\n如果配置中同时出现top和bottom，且top先出现，则优先按照top展开；如果上方放不下layer，则按照bottom展开。\n\n######1.3 展开位置\n使用展开方向配置，layer展开后的具体位置，只能有四种可能，这四种可能会被映射成时钟方向配置结果，\n通过返回值返回。\n\n#####2 时钟方向配置：layer的最终位置在anchor的n点钟方向，时钟方向配置没有自适应功能。\n\n######2.1 layer左下角与anchor左上角重合\n                        +--------------+\n                        |       1      |\n                        |              |\n                        +--------------+\n                        | anchor |\n                        +--------+\n######2.2 layer左下角与anchor右上角重合\n                                 +--------------+\n                                 |       2      |\n                                 |              |\n                        +--------+--------------+\n                        | anchor |\n                        +--------+\n######2.3 layer左下角与anchor右下角重合\n                                 +--------------+\n                        +--------|       3      |\n                        | anchor |              |\n                        +--------+--------------+\n######2.3.5 layer在anchor右侧垂直居中的位置\n                                 +--------------+\n                                 |              |\n                                 |              |\n                        +--------+              |\n                        | anchor |      3.5     |\n                        +--------+              |\n                                 |              |\n                                 |              |\n                                 +--------------+\n######2.4 layer左上角与anchor右上角重合         \n                        +--------+--------------+\n                        | anchor |       4      |\n                        +--------|              |\n                                 +--------------+\n######2.5 layer左上角与anchor右下角重合\n                        +--------+\n                        | anchor |\n                        +--------+--------------+\n                                 |       5      |\n                                 |              |\n                                 +--------------+\n######2.6 layer左上角与anchor左下角重合\n                        +--------+\n                        | anchor |\n                        +--------------+\n                        |       6      |\n                        |              |\n                        +--------------+\n######2.6.5 layer在anchor下方水平居中\n                        +--------+\n                        | anchor |\n                     +--------------+\n                     |      6.5     |\n                     |              |\n                     +--------------+\n######2.7 layer右上角与anchor右下角重合\n                        +--------+\n                        | anchor |\n                  +--------------+\n                  |       7      |\n                  |              |\n                  +--------------+\n######2.8 layer右上角与anchor左下角重合\n                        +--------+\n                        | anchor |\n         +--------------+--------+\n         |       8      |\n         |              |\n         +--------------+\n######2.9 layer右上角和anchor左上角重合\n         +--------------+--------+\n         |       9      | anchor |\n         |              |--------+ \n         +--------------+\n######2.9.5 layer右上角和anchor左上角重合\n         +--------------+\n         |              |\n         |              |\n         |              +--------+\n         |      9.5     | anchor | \n         |              +--------+\n         |              |\n         |              |\n         +--------------+\n######2.10 layer右下角与anchor左下角重合\n         +--------------+\n         |      10      |--------+\n         |              | anchor |\n         +--------------+--------+\n######2.11 layer右下角与anchor左上角重合\n         +--------------+\n         |      11      |\n         |              |\n         +--------------+--------+\n                        | anchor |\n                        +--------+\n######2.12 layer右下角与anchor右上角重合\n                  +--------------+\n                  |      12      |\n                  |              |\n                  +--------------+\n                        | anchor |\n                        +--------+\n######2.12.5 layer在anchor上方水平居中\n                     +--------------+\n                     |     12.5     |\n                     |              |\n                     +--------------+\n                        | anchor |\n                        +--------+","class":""},{"file":"src\\core\\layerTools.js","line":159,"structure":"LayerPosition","params":[{"name":"left","description":"layer显示的left坐标","type":"Number"},{"name":"top","description":"layer显示的top坐标","type":"Number"},{"name":"clock","description":"layer相对与anchor的时钟位置","type":"Number"}],"class":""},{"file":"src\\core\\numberboxTools.js","line":1,"description":"NumberBox 工具集","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\core\\numberboxTools.js","line":12,"description":"过滤掉字符串中所有非数字，包括串中间的负号、第二次出现的小数点、前方不合法的0","interface":"charFilter","params":[{"name":"value","description":"待处理的串","type":"String|number"}],"return":{"description":"过滤后数字串","type":"String"},"class":""},{"file":"src\\core\\numberboxTools.js","line":49,"description":"数字区间过滤，在区间内，返回值，否则返回区间边界","interface":"regionFilter","params":[{"name":"value","description":"待处理值","type":"String|number"},{"name":"max","description":"最大值","type":"Number"},{"name":"min","description":"最小值","type":"Number"}],"return":{"description":"在区间内的值","type":"String|Number"},"class":""},{"file":"src\\core\\numberboxTools.js","line":73,"description":"截取小数点，四舍五入","interface":"fixed","params":[{"name":"value","description":"是合法数字字符串","type":"String"},{"name":"fixed","description":"小数位数","type":"Number"}],"return":{"description":"截取了小数部分的数字字符串","type":"String"},"class":""},{"file":"src\\core\\numberboxTools.js","line":99,"description":"根据配置将字符串处理成合法数字","interface":"numberFormater","params":[{"name":"value","description":"字符串","type":"String"},{"name":"config","description":"配置参数","type":"Object","props":[{"name":"max","description":"最大值","type":"Number"},{"name":"min","description":"最小值","type":"Number"},{"name":"type","description":"类型，int或float","type":"String"},{"name":"fixed","description":"小数位数，只在type=float时才有用","type":"Number"}]}],"return":{"description":"符合要求的数字字符串","type":"String"},"class":""},{"file":"src\\core\\regionTools.js","line":1,"description":"Region 工具集","author":"0.0.2.1","email":"lbxxlht@163.com","class":""},{"file":"src\\core\\regionTools.js","line":132,"description":"获取地区的选中状态","interface":"getSelectedState","params":[{"name":"id","description":"地区编号","type":"Number"},{"name":"value","description":"选中地区的hash","type":"Object"},{"name":"noLinkage","description":"是否禁止子孙联动查找","type":"Boolean"}],"return":{"description":"地区选中状态","type":"RegionSelectState"},"class":""},{"file":"src\\core\\regionTools.js","line":140,"structure":"RegionSelectState","params":[{"name":"checked","description":"该地区是否被选中","type":"Boolean"},{"name":"indeterminate","description":"该地区是否出去半选状态","type":"Boolean"},{"name":"selected","description":"该地区子树上选中的节点个数","type":"Number"},{"name":"total","description":"该地区子树上所有节点个数","type":"Number"}],"class":""},{"file":"src\\core\\regionTools.js","line":174,"description":"指针方法，将提取添加到选中hash中","interface":"addValue","params":[{"name":"key","description":"地区编号","type":"Number"},{"name":"value","description":"选中地区的hash","type":"Object"},{"name":"noLinkage","description":"是否禁止子孙联动添加","type":"Boolean"}],"class":""},{"file":"src\\core\\regionTools.js","line":210,"description":"指针方法，从选中hash中删除地区","interface":"deleteValue","params":[{"name":"key","description":"地区编号","type":"Number"},{"name":"value","description":"选中地区的hash","type":"Object"},{"name":"noLinkage","description":"是否禁止子孙和祖先联动删除","type":"Boolean"}],"class":""},{"file":"src\\core\\regionTools.js","line":242,"description":"指针方法，删除选中hash中所有地区","interface":"clearValue","params":[{"name":"value","description":"选中地区的hash","type":"Object"}],"class":""},{"file":"src\\core\\regionTools.js","line":253,"description":"将字符串类型的选中值转成hash","interface":"parseValue","params":[{"name":"value","description":"选中地区串，以','分隔地区编号","type":"String"}],"return":{"description":"","type":"Object"},"class":""},{"file":"src\\core\\regionTools.js","line":270,"description":"将地区选中hash转成字符串","interface":"stringifyValue","params":[{"name":"地区选中hash，以地区编号为key","description":"","type":"Object"}],"return":{"description":"选中地区串，以','分隔地区编号","type":"String"},"class":""},{"file":"src\\core\\scheduleTools.js","line":1,"description":"Schedule 工具集","author":"0.0.2.1","email":"lbxxlht@163.com","class":""},{"file":"src\\core\\scheduleTools.js","line":13,"description":"输入值转内部结构","interface":"parseValue","params":[{"name":"value","description":"schedule值","type":"String"}],"return":{"description":"内部值结构","type":"Array.<Array.<null|String>>"},"note":"内部值结构是一个二位数组，第一维表示星期，第二维表示小时，共 7x24 = 168个元素。\n\n每个元素要么为null，要么为字符串。为null时表示该小时未被选中；为字符串时表示选中。","class":""},{"file":"src\\core\\scheduleTools.js","line":45,"description":"内部结构转字符串","interface":"stringifyValue","return":{"description":"schedule值","type":"String"},"params":[{"name":"内部值结构","description":"","type":"Array.<Array.<null|String>>"}],"note":"将内部结构的二维数组以行优先形式合并成一个数组，并转成JSON返回","class":""},{"file":"src\\core\\scheduleTools.js","line":66,"description":"获取虚拟鼠标尺寸","interface":"getCursorSize","params":[{"name":"param","description":"输入数据对象","type":"Object","props":[{"name":"mouseDownX","description":"鼠标按下时的x坐标","type":"Number"},{"name":"mouseDownY","description":"鼠标按下时的y坐标","type":"Number"},{"name":"mouseCurrentX","description":"鼠标当前x坐标","type":"Number"},{"name":"mouseCurrentY","description":"鼠标当前y坐标","type":"Number"}]}],"return":{"description":"虚拟鼠标的样式","type":"ScheduleCursorSize"},"class":""},{"file":"src\\core\\scheduleTools.js","line":76,"structure":"ScheduleCursorSize","params":[{"name":"left","description":"虚拟鼠标left值","type":"Number"},{"name":"top","description":"虚拟鼠标top值","type":"Number"},{"name":"width","description":"虚拟鼠标width值","type":"Number"},{"name":"height","description":"虚拟鼠标height值","type":"Number"}],"class":""},{"file":"src\\core\\scheduleTools.js","line":115,"description":"获取格子坐标","interface":"getGridAxis","params":[{"name":"x","description":"相对操作区左上角x坐标","type":"Number"},{"name":"y","description":"相对操作区左上角y坐标","type":"Number"}],"return":{"description":"格子坐标","type":"ScheduleAxis"},"class":""},{"file":"src\\core\\scheduleTools.js","line":122,"structure":"ScheduleAxis","params":[{"name":"x","description":"格子横坐标，有效区间[0, 23]","type":"Number"},{"name":"y","description":"格子纵坐标，有效区间[0, 6]","type":"Number"}],"class":""},{"file":"src\\core\\scheduleTools.js","line":139,"description":"合并同值value","interface":"getMergedValues","params":[{"name":"arr","description":"单行value数据","type":"Arrray.<null|String>"}],"return":{"description":"同值合并后的对象数组","type":"Array.<ScheduleMergedValue>"},"class":""},{"file":"src\\core\\scheduleTools.js","line":145,"structure":"ScheduleMergedValue","params":[{"name":"begin","description":"起始小时","type":"Number"},{"name":"end","description":"结束小时","type":"Number"},{"name":"value","description":"区间内的value值","type":"String"}],"class":""},{"file":"src\\core\\scheduleTools.js","line":185,"description":"获取选中区域","interface":"getSelectedRange","params":[{"name":"param","description":"输入数据对象","type":"Object","props":[{"name":"mouseDownX","description":"鼠标按下时的x坐标","type":"Number"},{"name":"mouseDownY","description":"鼠标按下时的y坐标","type":"Number"},{"name":"mouseCurrentX","description":"鼠标当前x坐标","type":"Number"},{"name":"mouseCurrentY","description":"鼠标当前y坐标","type":"Number"}]}],"return":{"description":"选中区域对象","type":"ScheduleRange"},"class":""},{"file":"src\\core\\scheduleTools.js","line":195,"structure":"ScheduleRange","params":[{"name":"startHour","description":"起始小时","type":"Number"},{"name":"endHour","description":"结束小时","type":"Number"},{"name":"startWeekday","description":"起始星期","type":"Number"},{"name":"endWeekday","description":"结束星期","type":"Number"}],"class":""},{"file":"src\\core\\scheduleTools.js","line":218,"description":"获取区域内选中小时个数","interface":"getRangeSelectedCount","params":[{"name":"value","description":"schedule的value","type":"String"},{"name":"axis1","description":"区域左上角坐标","type":"ScheduleAxis"},{"name":"axis2","description":"区域右下角坐标","type":"ScheduleAxis"}],"return":{"description":"区域内被选中的小时个数","type":"Number"},"class":""},{"file":"src\\core\\scheduleTools.js","line":244,"description":"获取区域说明","interface":"getRangeIntro","params":[{"name":"startHour","description":"起始小时","type":"Number"},{"name":"endHour","description":"结束小时","type":"Number"},{"name":"startWeekday","description":"起始星期","type":"Number"},{"name":"endWeekday","description":"结束星期","type":"Number"}],"return":{"description":"区域说明文本","type":"String"},"class":""},{"file":"src\\core\\scheduleTools.js","line":271,"description":"反选鼠标拖拽区域内的值","interface":"updateValueByMouse","params":[{"name":"value","description":"schedule的值","type":"String"},{"name":"param","description":"输入数据对象","type":"Object","props":[{"name":"mouseDownX","description":"鼠标按下时的x坐标","type":"Number"},{"name":"mouseDownY","description":"鼠标按下时的y坐标","type":"Number"},{"name":"mouseCurrentX","description":"鼠标当前x坐标","type":"Number"},{"name":"mouseCurrentY","description":"鼠标当前y坐标","type":"Number"}]}],"class":""},{"file":"src\\core\\scheduleTools.js","line":291,"description":"设置坐标区域内的值","interface":"updateValueByMouse","params":[{"name":"value","description":"schedule的值","type":"String"},{"name":"axis1","description":"区域左上角坐标","type":"ScheduleAxis"},{"name":"axis2","description":"区域右下角坐标","type":"ScheduleAxis"},{"name":"v","description":"选中值，如果不制定，则进行如下操作\n当前操作区域，如果都选中了，则取消选中；如果存在未选中的，则选中未选中的区域","type":"?String"}],"class":""},{"file":"src\\core\\shojiScreenTools.js","line":1,"description":"ShojiScreen 工具集","author":"0.0.2.1","email":"lbxxlht@163.com","class":""},{"file":"src\\core\\shojiScreenTools.js","line":15,"description":"向全局按钮队列中添加一个按钮，只操作队列，不进行其他任何操作","interface":"addExpandButton","params":[{"name":"dom","description":"ShojiScreen的expand按钮","type":"HtmlElement"}],"class":""},{"file":"src\\core\\shojiScreenTools.js","line":31,"description":"从全局按钮队列中移除一个按钮，只操作队列，不进行其他任何操作","interface":"removeExpandButton","params":[{"name":"dom","description":"ShojiScreen的expand按钮","type":"HtmlElement"}],"class":""},{"file":"src\\core\\shojiScreenTools.js","line":49,"description":"刷新所有可用按钮的位置","interface":"freshExpandButton","class":""},{"file":"src\\core\\sliderTools.js","line":1,"description":"Slider 工具集","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\core\\sliderTools.js","line":27,"description":"获取有效的步长，非数字和非正数返回默认值1，其他情况下取整","interface":"getValidStep","params":[{"name":"step","description":"设置的步长","type":"Number"}],"return":{"description":"对应的有效步长","type":"Number"},"class":""},{"file":"src\\core\\sliderTools.js","line":45,"description":"根据滑竿配置将值换算成屏幕相对","interface":"value2position","params":[{"name":"value","description":"某个值","type":"Number"},{"name":"me","description":"滑竿组件实例","type":"ReactComponent"},{"name":"margin","description":"滑竿坐标轴两侧的margin值","type":"Number"}],"return":{"description":"值在坐标轴上的对应坐标","type":"Number"},"class":""},{"file":"src\\core\\sliderTools.js","line":65,"description":"根据滑竿配置将坐标换算成值","interface":"position2value","params":[{"name":"pop","description":"滑竿坐标轴上的某一点坐标","type":"Number"},{"name":"me","description":"滑竿组件实例","type":"ReactComponent"},{"name":"margin","description":"滑竿坐标轴两侧的margin值","type":"Number"}],"return":{"description":"坐标轴上坐标对应的值","type":"Number"},"class":""},{"file":"src\\core\\sliderTools.js","line":84,"description":"根据滑竿配置将值转换成可显示的值","interface":"displayValue","params":[{"name":"value","description":"某个值","type":"Number"},{"name":"滑竿组件实例","description":"","type":"ReactComponent"}],"return":{"description":"符合滑竿配置要求的数字字符串","type":"String"},"class":""},{"file":"src\\core\\sliderTools.js","line":116,"description":"获取有效的步长，非数字和非正数返回默认值1，其他情况下取整","interface":"getValidStep","params":[{"name":"step","description":"设置的步长","type":"Number"}],"return":{"description":"对应的有效步长","type":"Number"},"class":""},{"file":"src\\core\\tableTools.js","line":1,"description":"Table 工具集","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\core\\tableTools.js","line":21,"description":"计算选中hash中item个数","interface":"getSelectedCount","params":[{"name":"obj","description":"选中hash，-1表示全选","type":"Object|number"}],"return":{"description":"选中的item个数，即obj键的个数，-1为全选","type":"Number"},"class":""},{"file":"src\\core\\tableTools.js","line":37,"description":"表格是否含有数据","interface":"haveDate","params":[{"name":"me","description":"table组件实例","type":"ReactComponent"}],"return":{"description":"判断结果，如果不配列或不配数据源，都是true","type":"Boolean"},"class":""},{"file":"src\\core\\tableTools.js","line":51,"description":"从table的value中获取选中hash","interface":"getSelectedHash","params":[{"name":"value","description":"table的value值","type":"String"}],"return":{"description":"选中的行的index hash，如果全选返回-1","type":"Object|number"},"class":""},{"file":"src\\core\\tableTools.js","line":69,"description":"获取行的选中状态","interface":"getRowSelectedState","params":[{"name":"row","description":"行号","type":"Number"},{"name":"value","description":"table的value","type":"String"}],"return":{"description":"选中状态：-1未选中；0选中；1半选中","type":"Number"},"class":""},{"file":"src\\core\\tableTools.js","line":88,"description":"更新选中集","interface":"updateSelected","params":[{"name":"index","description":"选择器的行号","type":"Number"},{"name":"checked","description":"选择器的选中状态","type":"Boolean"},{"name":"selectMode","description":"快捷选择方式","type":"String"},{"name":"tableValue","description":"table的value","type":"String"},{"name":"datasource","description":"表格数据源","type":"Array"}],"return":{"description":"选中行的数组，如果全选，返回-1","type":"Array|number"},"class":""},{"file":"src\\core\\tableTools.js","line":142,"description":"单元格属性工厂","interface":"tdPropsFactory","params":[{"name":"conf","description":"单元格所在列的配置","type":"Object"},{"name":"item","description":"单元格所在行的数据源","type":"Object"},{"name":"me","description":"table组件实例","type":"ReactComponent"},{"name":"row","description":"单元格行索引","type":"Number"},{"name":"column","description":"单元格列索引","type":"Number"}],"return":{"description":"传入单元格渲染器的props","type":"Object"},"class":""},{"file":"src\\core\\tableTools.js","line":191,"description":"类配置工厂，主要用于嵌入选择器配置","interface":"fieldConfigFactory","params":[{"name":"me","description":"table实例","type":"ReactComponent"},{"name":"renderers","description":"外部导入的默认渲染器，由于某些渲染器可能会调用此文件，造成循环加载，所以从外部导入","type":"Object"}],"return":{"description":"列配置","type":"Array"},"class":""},{"file":"src\\core\\treeTools.js","line":1,"description":"Tree 工具集","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\core\\treeTools.js","line":10,"description":"获取Tree节点数据源","interface":"getLeafItem","params":[{"name":"datasource","description":"Tree数据源","type":"Array.<TreeItemObject>"},{"name":"indexs","description":"节点序列，从树的第一层开始，依照序列从children中检出","type":"Array.<Number>"}],"return":{"description":"节点数据源","type":"TreeItemObject"},"class":""},{"file":"src\\core\\treeTools.js","line":28,"description":"获取Tree节点的选择状态","interface":"getNodeSelectInfo","params":[{"name":"item","description":"节点数据源","type":"TreeItemObject"},{"name":"selectedHash","description":"Tree选择状态hash，以item.value为key","type":"Object"},{"name":"index","description":"节点序列","type":"String"},{"name":"loadCache","description":"树遍历临时hash，由于树遍历时出现相同计算，所以要使用cache以提高效率","type":"Object"}],"return":{"description":"节点选择状态","type":"TreeNodeSelectState"},"class":""},{"file":"src\\core\\treeTools.js","line":37,"structure":"TreeNodeSelectState","params":[{"name":"total","description":"子树所有节点个数","type":"Number"},{"name":"selected","description":"子树所有选中节点个数","type":"Number"}],"class":""},{"file":"src\\core\\treeTools.js","line":74,"description":"获取Tree叶子个数","interface":"getLeafCount","params":[{"name":"datasource","description":"树数据源","type":"Array"}],"return":{"description":"叶子节点个数","type":"Number"},"class":""},{"file":"src\\core\\treeTools.js","line":94,"description":"修改异步数据源叶子选中状态","interface":"targetAsyncLeaf","params":[{"name":"selected","description":"选中状态hash","type":"Object"},{"name":"selectorEngine","description":"选择器引擎","type":"Object"},{"name":"datasource","description":"tree新的数据源","type":"Array"}],"return":{"description":"selected是否被修改","type":"Boolean"},"class":""},{"file":"src\\core\\treeTools.js","line":132,"description":"指针方法，选中子树","interface":"dualTreeSelectorEngine.select","params":[{"name":"selected","description":"Tree的选中hash","type":"Object"},{"name":"item","description":"节点数据源","type":"TreeItemObject"}],"example":["\n此处逻辑：\n（1）如果当前节点是叶子节点，标记为true\n（2）如果当前节点不是叶子节点，在其树下所有叶子标记为true\n（3）如果当点节点有children属性，但children长度为0，则将此节点标记为1"],"class":""},{"file":"src\\core\\treeTools.js","line":170,"description":"指针方法，删除子树","interface":"dualTreeSelectorEngine.unselect","params":[{"name":"selected","description":"Tree的选中hash","type":"Object"},{"name":"item","description":"节点数据源","type":"TreeItemObject"}],"example":["\n此处逻辑\n（1）如果是叶子，则删除\n（2）如果不是叶子，则删除该子树上的所有叶子"],"class":""},{"file":"src\\core\\util.js","line":1,"description":"全局工具集","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","note":"1. 此工具库所有方法，不但fcui2可以使用，其他任何项目都可以拿出去单独使用\n2. 此工具库不支持ES6语法，确保所有方法在所有浏览器基础环境中都能正确运行\n3. 不允许在此工具集中引入或使用或合并其他任何库，比如jQuery等\n4. 此工具集包含了操作原生DOM的方法，不能在node中使用\n5. 目前符合AMD规范，将来会支持CMD和直接引入","class":""},{"file":"src\\core\\util.js","line":35,"description":"深度比较两个对象是否相等","params":[{"name":"x","description":"对象1","type":"Object"},{"name":"y","description":"对象2","type":"Object"}],"class":""},{"file":"src\\core\\util.js","line":83,"description":"uuid生成器","interface":"uuid","params":[{"name":"tpl","description":"uuid的模版串，xy将被替换，其他不替换","type":"String"}],"return":{"description":"符合格式的唯一id","type":"String"},"class":""},{"file":"src\\core\\util.js","line":100,"description":"获取浏览器类型","interface":"getBrowserInfo","return":{"description":"浏览器类型","type":"String"},"class":""},{"file":"src\\core\\util.js","line":124,"description":"获取浏览器厂商","class":""},{"file":"src\\core\\util.js","line":149,"description":"获取window下的某个namespace，如果不存在，则创建一个空对象","interface":"getNamespace","params":[{"name":"namespace","description":"命名空间名称","type":"String"}],"return":{"description":"命名空间","type":"Object"},"class":""},{"file":"src\\core\\util.js","line":160,"description":"绑定函数上下文","interface":"bind","params":[{"name":"func","description":"需要绑定的函数","type":"Function"},{"name":"me","description":"绑定到函数的上下文","type":"Object"}],"return":{"description":"通过闭包形式返回上下文绑定好的函数","type":"Function"},"class":""},{"file":"src\\core\\util.js","line":173,"description":"获取dom某个css属性，不论这个属性是写在style里的，还是通过css设置的","interface":"getStyle","params":[{"name":"dom","description":"dom节点","type":"HtmlElement"},{"name":"attr","description":"style属性名称，驼峰命名","type":"String"}],"return":{"description":"属性值","type":"Any"},"class":""},{"file":"src\\core\\util.js","line":184,"description":"获取输入框光标位置","interface":"getCursorPosition","params":[{"name":"dom","description":"正在输入的dom元素","type":"HtmlElement"}],"return":{"description":"鼠标位置，如果为-1，表示dom没有获得焦点","type":"Number"},"class":""},{"file":"src\\core\\util.js","line":205,"description":"设置输入框中光标位置","interface":"setCursorPosition","params":[{"name":"dom","description":"正在输入的dom元素","type":"HtmlElement"},{"name":"pos","description":"光标位置","type":"Number"}],"class":""},{"file":"src\\core\\util.js","line":227,"description":"获取DOM是否可见，组件自身或者祖先中，只要visibility:hidden或display:none，即为不可见","interface":"isDOMVisible","params":[{"name":"dom","description":"dom节点","type":"HtmlElement"}],"return":{"description":"检查结果","type":"Boolean"},"class":""},{"file":"src\\core\\util.js","line":252,"description":"获取dom节点的位置","interface":"getDOMPosition","params":[{"name":"e","description":"dom节点","type":"HtmlElement"}],"return":{"description":"位置对象","type":"PositionState"},"class":""},{"file":"src\\core\\util.js","line":258,"structure":"PositionState","params":[{"name":"left","description":"dom相对于body左侧距离","type":"Number"},{"name":"top","description":"dom相对于body右侧距离","type":"Number"},{"name":"x","description":"dom相对于可视区域左侧距离","type":"Number"},{"name":"y","description":"dom相对于可视区域右侧距离","type":"Number"}],"class":""},{"file":"src\\core\\util.js","line":299,"description":"获取DOM节点dataset，主要为了兼容最老版本的IE9","interface":"getDataset","params":[{"name":"dom","description":"dom节点","type":"HtmlElement"}],"return":{"description":"dataset数据集","type":"Object"},"class":""},{"file":"src\\core\\util.js","line":325,"description":"将时间对象根据指定格式返回","interface":"dateFormat","params":[{"name":"date","description":"时间对象","type":"Object"},{"name":"tpl","description":"格式串：Y年;M月;D日;h小时;m分;s秒;S毫秒","type":"String"}],"return":{"description":"根据tpl格式化好的事件","type":"String"},"class":""},{"file":"src\\core\\validationTools.js","line":1,"description":"校验工具集","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","note":"此工具集被src\\mixins\\InputWidget.js使用","class":""},{"file":"src\\core\\validationTools.js","line":12,"description":"校验配置工厂。如果传入字符串，尝试用JSON.parse将字符串转成对象，否则什么都不做。","interface":"validationFactory","params":[{"name":"validations","description":"校验配置","type":"Object|String"}],"return":{"description":"校验机对象","type":"Object"},"class":""},{"file":"src\\core\\validationTools.js","line":29,"description":"检查input组件的外层表单实例上有没有某个方法","interface":"isCallbackExist","params":[{"name":"me","description":"Input类型组件，这种类型的组件引入的InputWidget mixin","type":"ReactComponent"},{"name":"callback","description":"方法名称","type":"String"}],"return":{"description":"检查结果，input组件外层没有form或input组件没有配置name属性或form中没有命为callback的方法，都返回false","type":"Boolean"},"class":""},{"file":"src\\core\\validationTools.js","line":49,"description":"校验准则工厂","interface":"rulesFactory","params":[{"name":"me","description":"Input类型组件","type":"ReactComponent"},{"name":"rules","description":"校验名称集","type":"String|Array.<String>"}],"return":{"description":"校验机中存在的校验准则序列，rules中存在但组件校验机中不存在的准则名称将被过滤","type":"Array.<String>"},"class":""},{"file":"src\\core\\validations.js","line":1,"description":"常用校验机","author":"Hu Jian, Brian Li (lbxxlht@163.com)","version":"0.0.2.1","class":""},{"file":"src\\core\\validations.js","line":29,"description":"是否存在，null, undefined视为不存在，其他值均为存在。","interface":"required","params":[{"name":"value","description":"待校验值","type":"Any"}],"return":{"description":"校验结果对象","type":"ValidateResult"},"class":""},{"file":"src\\core\\validations.js","line":35,"structure":"ValidateResult","params":[{"name":"isValid","description":"是否通过校验","type":"Boolean"},{"name":"template","description":"未通过校验时的默认错误信息","type":"String"}],"class":""},{"file":"src\\core\\validations.js","line":46,"description":"是否通过正则检查。值不存在，或值为空字符串，也视为通过校验","interface":"matchRegexp","params":[{"name":"value","description":"待校验值","type":"Any"},{"name":"regexp","description":"正则表达式","type":"Reg"}],"return":{"description":"校验结果对象","type":"ValidateResult"},"class":""},{"file":"src\\core\\validations.js","line":58,"description":"是否未通过正则检查。值不存在，或值为空字符串，也视为通过校验","interface":"notMatchRegexp","params":[{"name":"value","description":"待校验值","type":"Any"},{"name":"regexp","description":"正则表达式","type":"Reg"}],"return":{"description":"校验结果对象","type":"ValidateResult"},"class":""},{"file":"src\\core\\validations.js","line":70,"description":"是否是合法的email地址，内部调用this.matchRegexp","interface":"isEmail","params":[{"name":"value","description":"待校验值","type":"Any"}],"return":{"description":"校验结果对象","type":"ValidateResult"},"class":""},{"file":"src\\core\\validations.js","line":83,"description":"是否是合法的url地址，内部调用this.matchRegexp","interface":"isUrl","params":[{"name":"value","description":"待校验值","type":"Any"}],"return":{"description":"校验结果对象","type":"ValidateResult"},"class":""},{"file":"src\\core\\validations.js","line":97,"description":"是否是带协议的合法的url地址，内部调用this.matchRegexp","interface":"isUrl","params":[{"name":"value","description":"待校验值","type":"Any"}],"return":{"description":"校验结果对象","type":"ValidateResult"},"class":""},{"file":"src\\core\\validations.js","line":111,"description":"是否是合法的座机号码或手机号码，内部调用this.matchRegexp","interface":"isAnyPhone","params":[{"name":"value","description":"待校验值","type":"Any"}],"return":{"description":"校验结果对象","type":"ValidateResult"},"class":""},{"file":"src\\core\\validations.js","line":125,"description":"是否是合法的手机号码，内部调用this.matchRegexp","interface":"isPhone","params":[{"name":"value","description":"待校验值","type":"Any"}],"return":{"description":"校验结果对象","type":"ValidateResult"},"class":""},{"file":"src\\core\\validations.js","line":138,"description":"是否是合法的座机号码，内部调用this.matchRegexp","interface":"isTelephone","params":[{"name":"value","description":"待校验值","type":"Any"}],"return":{"description":"校验结果对象","type":"ValidateResult"},"class":""},{"file":"src\\core\\validations.js","line":151,"description":"是否是合法数字，内部调用this.matchRegexp","interface":"isNumeric","params":[{"name":"value","description":"待校验值","type":"Any"}],"return":{"description":"校验结果对象","type":"ValidateResult"},"class":""},{"file":"src\\core\\validations.js","line":170,"description":"是否是英文字母，内部调用this.matchRegexp","interface":"isAlpha","params":[{"name":"value","description":"待校验值","type":"Any"}],"return":{"description":"校验结果对象","type":"ValidateResult"},"class":""},{"file":"src\\core\\validations.js","line":182,"description":"是否是英文字母或数字，内部调用this.matchRegexp","interface":"isAlphanumeric","params":[{"name":"value","description":"待校验值","type":"Any"}],"return":{"description":"校验结果对象","type":"ValidateResult"},"class":""},{"file":"src\\core\\validations.js","line":194,"description":"是否小于最大长度，值如果不存在也会通过校验","interface":"maxLength","params":[{"name":"value","description":"待校验值","type":"Any"}],"return":{"description":"校验结果对象","type":"ValidateResult"},"class":""},{"file":"src\\core\\validations.js","line":206,"description":"是否小于最大字节长度，值如果不存在也会通过校验，一个汉字的长度为2","interface":"maxByteLength","params":[{"name":"value","description":"待校验值","type":"Any"}],"return":{"description":"校验结果对象","type":"ValidateResult"},"class":""},{"file":"src\\core\\validations.js","line":218,"description":"是否大于最小长度，值如果不存在或值为空也会通过校验","interface":"minLength","params":[{"name":"value","description":"待校验值","type":"Any"}],"return":{"description":"校验结果对象","type":"ValidateResult"},"class":""},{"file":"src\\core\\validations.js","line":230,"description":"是否大于最小字节长度，值如果不存在或值为空也会通过校验，一个汉字的长度为2","interface":"minByteLength","params":[{"name":"value","description":"待校验值","type":"Any"}],"return":{"description":"校验结果对象","type":"ValidateResult"},"class":""},{"file":"src\\enterprise\\ArraySelector.jsx.js","line":1,"description":"企业级数组选择器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\enterprise\\ArraySelector.jsx.js","line":36,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"labels","description":"话术配置","type":"Object","props":[{"name":"dropdownLabel","description":"下拉模式下，下拉按钮话术","type":"String"},{"name":"selectedLabel","description":"已选panel的标题","type":"String"},{"name":"unselectedLabel","description":"未选panel的标题","type":"String"},{"name":"tip","description":"右侧tip配置","type":"Object"}]},{"name":"src\\enterprise\\DualTreeSelector.jsx.js","description":"clearTemporaryAfterLayerClose isDropDown onBeforeLayerClose onLayerClose","type":"Import|Properties"},{"name":"src\\mixins\\InputWidget.js","description":"value onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\enterprise\\ArraySelector.jsx.js","line":47,"structure":"ArraySelectorValue","example":["\n '{\n     selected: <required>,\n     unselected: <required>\n }'"],"params":[{"name":"selected","description":"选中的项目","type":"Array.<ListItemObject>"},{"name":"unselected","description":"未选中的项目","type":"Array.<ListItemObject>"}],"class":""},{"file":"src\\enterprise\\DualTreeSelector.jsx.js","line":1,"description":"企业级双树选择器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\enterprise\\DualTreeSelector.jsx.js","line":36,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"src\\core\\DualTreeSelector.jsx.js","description":"datasource onAction leafRenderer selectorEngine","type":"Import|Properties"},{"name":"isDropDown","description":"是否工作在下拉模式下","type":"Boolean"},{"name":"clearTemporaryAfterLayerClose","description":"如果工作在DropDown模式下，layer关闭后是否清理临时操作值","type":"Boolean"},{"name":"labels","description":"话术配置","type":"Object","props":[{"name":"dropdownLabel","description":"以DropDown模式工作时外层按钮的话术","type":"String"},{"name":"title","description":"选择器上方标题","type":"String"},{"name":"leftTreeTitle","description":"左树标题","type":"String"},{"name":"rightTreeTitle","description":"右树标题","type":"String"},{"name":"footLeftInformation","description":"选择器下方左侧提示话术","type":"String"},{"name":"footSelectCountTpl","description":"选择器右侧中部已选择项模板，其中：\n'&selected'将被替换成已选择的叶子个数\n'&total'将被替换成数据源中所有叶子个数","type":"String"},{"name":"deleteAll","description":"右侧删除按钮话术","type":"String"},{"name":"appendAll","description":"左侧添加按钮话术","type":"String"},{"name":"errorMessage","description":"错误信息话术","type":"String"}]},{"name":"onBeforeLayerClose","description":"layer关闭前的回调，只在isDropDown=true时有效","type":"Function"},{"name":"onLayerClose","description":"layer关闭后回调，只在isDropDown=true时有效","type":"Function"},{"name":"src\\mixins\\InputWidget.js","description":"value onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\enterprise\\DualTreeSelector.jsx.js","line":58,"fire":"Import src\\mixins\\InputWidget.js XXX onChange","class":""},{"file":"src\\enterprise\\DualTreeSelector.jsx.js","line":61,"structure":"Import src\\Tree.jsx.js TreeItemObject","class":""},{"file":"src\\enterprise\\DualTreeSelector.jsx.js","line":64,"structure":"Import src\\DualTreeSelector.jsx.js DualTreeSelectorValueTemplate","class":""},{"file":"src\\enterprise\\SelectWithFilter.jsx.js","line":1,"description":"带搜索框的选择器","author":"Brian Li, hancong05","version":"0.0.2.1","class":""},{"file":"src\\enterprise\\SelectWithFilter.jsx.js","line":36,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"placeholder","description":"组件为选择且无初始值时，下拉按钮上显示的值","type":"String"},{"name":"openLayerType","description":"控制浮层打开的动作，onMouseEnter或onClick","type":"String"},{"name":"datasource","description":"列表数据源","type":"Array.<ListItemObject>"},{"name":"searchPlaceholder","description":"搜索框placeholder","type":"String"},{"name":"defaultFilter","description":"搜索数据的方法，默认灌入两个参数：(数据源, 过滤字符串)，返回过滤后的数组，","type":"Function"},{"name":"src\\mixins\\InputWidget.js","description":"value onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\enterprise\\SelectWithFilter.jsx.js","line":48,"structure":"Import src\\List.jsx.js ListItemObject","class":""},{"file":"src\\enterprise\\SelectWithFilter.jsx.js","line":51,"fire":"Import src\\mixins\\InputWidget.js XXX onChange","class":""},{"file":"src\\enterprise\\Uploader.jsx.js","line":1,"description":"文件上传组件","author":"Sun Wenfei","version":"0.0.2.1","class":""},{"file":"src\\enterprise\\Uploader.jsx.js","line":19,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"className style disabled skin","type":"Import|Properties"},{"name":"renderer","description":"value的渲染组件","type":"ReactComponent"},{"name":"formData","description":"随文件一同传回服务器的数据对象","type":"Object"},{"name":"uploadConfig","description":"文件上传配置","type":"Object"},{"name":"uploaderConfig.action","description":"服务器上传脚本路径，等同于form的action属性，默认/upload.do","type":"String"},{"name":"uploaderConfig.method","description":"上传方式，等同于form的method属性，默认post","type":"String"},{"name":"uploaderConfig.encType","description":"上传类型，等同于form的encType属性，默认multipart/form-data","type":"String"},{"name":"uploaderConfig.accept","description":"可选择文件类型，等同于input的accept属性，默认''","type":"String"},{"name":"src\\mixins\\InputWidget.js","description":"value onChange name validations valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\enterprise\\Uploader.jsx.js","line":33,"fire":"Import src\\mixins\\InputWidget.js XXX onChange","class":""},{"file":"ColorGrid 工厂方法","line":1,"author":"Wang Yi","email":"wangyispaceman@gmail.com","version":"0.0.2.2","class":""},{"file":"src\\mixins\\DragableWidget.js","line":1,"description":"有拖拽功能的mixin","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","note":"###说明文档\n#####此mixin作用\n某些需要有拖拽功能的组件，需要一些公共方法，如：鼠标拖动过程中，触发一个onDrag事件，回传鼠标位移向量；\n鼠标抬起后，触发一个onDrop事件，回传鼠标从按下到抬起的位移向量，此mixin解决了整个问题。\n#####this实例注入\n* this.___dragStart___：开始拖拽的入口，一般放在某个DOM的onMouseDown事件中\n#####触发回调\n* this.onDrag(dx, dy)：鼠标拖动过程中触发此回调，dx、dy分别为位移向量\n* this.onDrop(dx, dy)：鼠标拖动结束松开时触发此回调，dx、dy为鼠标释放位置相对按下位置的位移向量","class":""},{"file":"src\\mixins\\InputWidget.js","line":1,"description":"Input类型组件基础mixin","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","note":"###说明文档\n####1 此mixin作用\n#####1.1 同步input类型组件表现\n######1.1.1 同步组件表现\nReact中，原生input dom有两个特性：一是如果配置value属性，没有配置onChange回调或者onChange中未修改value的数据源，\n则input dom处于只读状态；二是如果不配置value属性，可以正常使用input dom，并通过onChange获取变化。本mixin为所有\n自定义input类型组件提供了这个支持。\n#####1.2 衔接外部Form组件\n######1.2.1 输入域注册\ninput类型组件有两种状态：一种是独立使用；一种是在表单内部作为表单的输入域使用。当input组件配置name属性后，\n需要检测外层是否存在Form组件，如果存在，需要在Form中注册自身，以达到与Form协作的目的。本mixin解决了自动注册的问题。\n######1.2.2 输入域校验\ninput类型组件的值发生变动时，常需要进行一系列校验，此mixin提供了校验机导入与执行接口。\n######1.2.3 域数据更新\ninput组件在Form组件内部时，如果配置了name属性，会成为Form的一个输入域。其值发生变化时，需要通知Form更新。\n本mixin完成了这一功能。\n####2 此mixin依赖\n#####2.1 props依赖，见this.props注释\n#####2.2 value类型的建议\n我们规定input类型组件的值为基础类型：string、number、boolean，复杂类型都应转换成string对外输出，具体原因如下：\n\n* 基础类型在外部state中更加安全；\n* 基础类型可以阻止用户对value进行指针操作；复杂类型的value如果操作不当，可能对组件造成毁灭性打击。\n* 保持自定义input类型组件与原生input dom的表现一致，也就是可以通过e.target.value或e.target.checked获取值，而e.target是组件的根dom节点，复杂类型是不能给dom.value赋值的。\n* 保持与原生一致，主要是降低用户对组件的学习成本，同时允许用户使用更通用的onChange处理方法。\n#####2.3 关于校验机validations属性配置\n* 所有input类型组件都可以通过this.props.validations属性传入校验机对象，即一组校验规则。\n* this.props.validations可以是一个对象，也可以是字符串；如果是字符串，内部将把它用JSON.parse转成对象。\n* 校验机的key为校验规则名称，可以是自定义名称，也可以是内部常用校验机的名称。关于内部常用校验机，见src\\core\\validations.js。\n* 自定义校验机，其值必须是一个函数，此函数返回值为boolean|string|ValidateResult，如果返回string，表示未通过该校验。\n* 在使用内置校验机时，其值将被当作形参传入内置校验机。\n#####2.4 关于校验结果customErrorTemplates属性配置\n* 校验结果属性为一个简单对象，键为校验准则名称，值为校验未通过时应当返回的错误信息；\n* 此属性一般用于覆盖内置校验机的结果提示，自定义校验机可以在校验函数中直接返回字符串当作错误提示。\n####3 此mixin输出\n#####3.1 this.state注入\n* this.state.___value___      {String|Number|Boolean} 组件的临时值，只有当props中未传入value时，此项才被读取。\n* this.state.___beOperated___ {Boolean} 组件是否被操作过。\n* this.state.isValid          {Boolean} 组件是否通过了校验，此项一般由组件外部的Form设置。\n#####3.2 this实例注入\n* this.___formAttached___ {boolean} 实例是否在外部表单中成功注册。\n* this.___validations___  {Object}  经过转换的校验机对象。","class":""},{"file":"src\\mixins\\InputWidget.js","line":50,"properties":"","params":[{"name":"value","description":"组件的值，具体类型视具体组件而定","type":"String|boolean|number"},{"name":"onChange","description":"组件发生输入后触发的回调","type":"Function"},{"name":"name","description":"组件在Form表单中的域名，如果Form中有多个同名输入组件，则最靠上的有效，Radio除外","type":"String"},{"name":"validations","description":"组件的校验机，参见src\\mixins\\InputWidget.js","type":"Object"},{"name":"customErrorTemplates","description":"组件的校验结果机，参见src\\mixins\\InputWidget.js","type":"Object"},{"name":"valueTemplate","description":"组件的默认值，优先级最低，参见src\\mixins\\InputWidget.js","type":"String|boolean|number"}],"class":""},{"file":"src\\mixins\\InputWidget.js","line":59,"fire":"XXX onChange","params":[{"name":"e","description":"React事件对象","type":"SyntheticEvent","props":[{"name":"target","description":"组件根容器","type":"HtmlElement","props":[{"name":"value","description":"组件的值，类型视具体组件而定","type":"String|Number|Boolean"}]}]}],"class":""},{"file":"src\\mixins\\InputWidget.js","line":117,"description":"获取value接口","interface":"___getValue___","return":{"description":"组件的值","type":"String|Number|Boolean"},"note":"* Radio做了特殊处理，返回DOM实际值。\n* 如果用户通过props.value或props.checked设置了值，则返回props.value或props.checked\n（注意，props.checked仅对CheckBox和Radio有效）；\n* 否则，如果组件state中存储了临时值___value___，返回这个临时值；\n* 否则，如果组件设置了默认值模版props.valueTemplate，返回模板值；\n* 否则，返回null","class":""},{"file":"src\\mixins\\InputWidget.js","line":157,"description":"派发onChange接口","interface":"___dispatchChange___","params":[{"name":"e","description":"React事件对象","type":"SyntheticEvent","props":[{"name":"target","description":"触发派发的组件的响应dom或根容器","type":"HtmlElement","props":[{"name":"value","description":"值","type":"String|number|boolean"}]}]},{"name":"value","description":"值2，如果传入这个参数，将派发这个值，而不派发e.target.value","type":"String|number|boolean"},{"name":"lastValue","description":"旧值，如果没有配置onChange，则视为派发失败，组件的值将被换原成此值，前提是调用时传入此值","type":"String|number|boolean"}],"class":""},{"file":"src\\mixins\\InputWidget.js","line":203,"description":"执行校验","interface":"validate","params":[{"name":"rules","description":"校验准则序列，如果不传入此参数，则校验配置的所有准则","type":"?Array.<string>"},{"name":"value","description":"待校验的值，如果传入此参数，则校验此参数，否则校验组件内部的value","type":"?Any"}],"return":{"description":"校验结果数组，如果校验全部通过，返回一个空数组","type":"Array.<string>"},"note":"返回的数组被加了一个名为resultsHash的属性，以hash方式存储校验结果，其key为未通过的校验准则，值为结果提示","class":""},{"file":"src\\mixins\\InputWidgetImeFixed.js","line":1,"description":"文本输入组件输入法hack mixin","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","note":"###说明文档\n#####1 mixin解决的问题\nReact设计理念是单向数据流，FCUI2也遵守这一原则。即input类型组件如果配置了value（或checked）属性，未配置onChange属性，\n那这个组件是只读的。这种单向数据流的设计模式让应用架构变得更简单，同时让程序鲁棒性更高。但对于文本输入类组件，如\nTextBox或TextArea，这种模式会带来一个很严重的问题，在某些情况下，无法使用IME输入法输入。\n#####2 问题产生原因\nReact中，input组件的value要存放在外部，父级的state中、某个祖先的state中或整个应用的外部。通过props.value导入给组件，\n组件被操作后派发onChange回调，通知外部修改value的源头，然后回来重新渲染，这也是MVVM的要求。\nReact为了避免频繁setState带来性能问题，内部使用了异步渲染机制。但正是由于异步渲染，用户输入时派发onChange，\n外部经过一段时间，把value写回，这打断了IME输入法的连续性，输入法中存储的临时内容被清空，无法正常输入。\n上面说的“某些情况”，具体说就是最终存储value源头的地方离input组件比较远，中间React比对虚拟dom树用了相当一段时间，\n超出了输入法容忍的范围。下面是个抽象模型：\n\n     <body>\n         <input type=\"text\" id=\"inputbox\"/>\n     </body>\n     <script type=\"text/javascript\">\n         var box = document.getElementById('inputbox');\n         box.addEventListener('keyup', function (e) {\n             var target = e.target;\n             var value = e.target.value;\n             console.log(value);\n             setTimeout(function () {\n                 e.target.value = value + '';\n              }, 100);\n         });\n     </script>\n#####3 问题解决方法\ninput有三个比较特殊的事件：compositionstart、compositionend、compositionupdate，\n分别表示输入法开始输入、完成输入上屏、输入更新，触发顺序是：start、update、update...update、end。\n解决方法是手动阻断onChange派发，在compositionstart和compositionend中修改一个开关，在onChange中判断这个开关，\n只在输入完毕后派发事件。\n#####4 this实例注入\n* this.___lastFiredValue___ {String|Number|Boolean} 组件上一次派发出去的值，避免重复派发\n* this.___lastCursorPos___ {Number} 组件上次keyup后光标位置\n* this.___imeStart___ {Boolean} 输入法是否处于输入状态\n* this.___isPressing___ {Boolean} 键盘是否正在敲击\n#####5 需要手动绑定到原生DOM的事件，mixin通过这些事件重新描述了onChange派发规则\n* this.___onCompositionStart___，对应onCompositionStart事件\n* this.___onCompositionEnd___，对应onCompositionEnd事件\n* this.___onKeyDown___，对应onKeyDown事件\n* this.___onKeyUp___，对应onKeyUp事件","class":""},{"file":"src\\mixins\\InputWidgetImeFixedForPreactIE.js","line":1,"description":"文本输入组件输入法hack mixin","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\mixins\\TreeNodeBase.js","line":1,"description":"树节点基础mixin","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\mixins\\TreeNodeBase.js","line":11,"description":"展开节点，通知Tree展开某个节点","interface":"onExpand","params":[{"name":"e","description":"React事件对象","type":"SyntheticEvent"}],"class":""},{"file":"src\\mixins\\TreeNodeBase.js","line":32,"fire":"Tree onAction","params":[{"name":"type","description":"TreeLoadChildren：加载子树","type":"String"},{"name":"param","description":"回调参数","type":"Object","props":[{"name":"index","description":"叶子序列","type":"Array.<String>"}]}],"class":""},{"file":"src\\mixins\\WidgetWithFixedDom.js","line":1,"description":"fixed组件内部DOM位置的mixin","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","note":"###说明文档\n#####mixin作用\n当滚动条滚动到某个位置后，组件内部某些DOM可能会需要固定到屏幕的特定位置，比如表头，本mixin解决了这个问题\n#####props依赖\nthis.props.fixedPosition {Array.<FixedObject>} 固定配置","class":""},{"file":"src\\mixins\\WidgetWithFixedDom.js","line":13,"structure":"Import src\\Table.jsx.js FixedObject","class":""},{"file":"src\\AlphabetRegion.jsx.js","line":1,"description":"字母序地域选择器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\AlphabetRegion.jsx.js","line":17,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"onClick","description":"响应回调","type":"Function"}],"class":""},{"file":"src\\AlphabetRegion.jsx.js","line":23,"fire":"Import src\\Button.jsx.js button onClick","class":""},{"file":"src\\Button.jsx.js","line":1,"description":"按钮","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.2","class":""},{"file":"src\\Button.jsx.js","line":15,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"label","description":"显示在按钮上的文字","type":"String"},{"name":"title","description":"鼠标悬浮在按钮上时提示的文字","type":"String"},{"name":"icon","description":"按钮上显示的图标，具体见src/css/icon/variable.less","type":"String"},{"name":"iconLeft","description":"按钮icon距按钮左边框的距离","type":"Number"},{"name":"type","description":"按钮类型，目前支持：button、submit、reset，如果按钮在Form中，会触发相应事件","type":"String"},{"name":"name","description":"按钮域名，如果组件在表单中，此属性等同于原生dom的name属性","type":"String"},{"name":"value","description":"按钮的值，此属性会通过onClick回调回传","type":"String"},{"name":"onClick","description":"按钮被点击时触发","type":"Function"},{"name":"onMouseEnter","description":"鼠标滑入按钮时触发","type":"Function"},{"name":"onMouseLeave","description":"鼠标滑出按钮时触发","type":"Function"}],"class":""},{"file":"src\\Button.jsx.js","line":29,"fire":"button onClick","params":[{"name":"e","description":"React事件对象","type":"SyntheticEvent","props":[{"name":"target","description":"组件实例的根容器","type":"HtmlElement","props":[{"name":"value","description":"组件实例的value属性","type":"String"}]}]}],"class":""},{"file":"src\\Button.jsx.js","line":35,"fire":"button onMouseEnter","params":[{"name":"e","description":"React事件对象","type":"SyntheticEvent","props":[{"name":"target","description":"Button实例的根容器","type":"HtmlElement"}]}],"class":""},{"file":"src\\Button.jsx.js","line":40,"fire":"button onMouseLeave","params":[{"name":"e","description":"React事件对象","type":"SyntheticEvent","props":[{"name":"target","description":"Button实例的根容器","type":"HtmlElement"}]}],"class":""},{"file":"src\\Calendar.jsx.js","line":1,"description":"日历","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\Calendar.jsx.js","line":22,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"min","description":"日历最小值，在这一天之前的日期不能被选定，格式：YYYY-MM-DD","type":"String"},{"name":"max","description":"日历最大值，在这一天之后的日期不能被选定，格式：YYYY-MM-DD","type":"String"},{"name":"src\\mixins\\InputWidget.js","description":"value onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\Calendar.jsx.js","line":31,"fire":"Import src\\mixins\\InputWidget.js XXX onChange","class":""},{"file":"src\\CheckBox.jsx.js","line":1,"description":"复选框","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.2","class":""},{"file":"src\\CheckBox.jsx.js","line":16,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"label","description":"复选框旁边显示的文字，点击文字也可以改变选中状态","type":"String"},{"name":"value","description":"复选框的值，触发onChange时随事件对象返回，用于区分复选框的身份","type":"String"},{"name":"checked","description":"复选框是否被选中，触发onChange时随事件对象返回，用于表明复选框时候被选中","type":"Boolean"},{"name":"indeterminate","description":"复选框时候处于半选状态，如果checked为false、indeterminate为true，复选框将呈现为半选状态","type":"Boolean"},{"name":"labelPosition","description":"文本标签显示的位置，'right'为复选框右侧，否则在左侧","type":"String"},{"name":"src\\mixins\\InputWidget.js","description":"onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\CheckBox.jsx.js","line":27,"fire":"CheckBox onChange","params":[{"name":"e","description":"React事件对象","type":"SyntheticEvent","props":[{"name":"target","description":"组件实例的根容器","type":"HtmlElement","props":[{"name":"checked","description":"checkbox是否被选中","type":"Boolean"},{"name":"value","description":"checkbox的值，用于区别身份，等于this.props.value","type":"String"}]}]}],"class":""},{"file":"src\\ColorGrid.jsx.js","line":1,"description":"栅格形式的色彩选择器","author":"Wang Yi","email":"wangyispaceman@gmail.com","version":"0.0.2.2","class":""},{"file":"src\\ColorGrid.jsx.js","line":17,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"colors","description":"可选择的颜色集合，以#为前缀的CSS色值，六位十六进制数组成","type":"Array.<String>"},{"name":"renderer","description":"组件主体部分渲染器","type":"ReactClass"},{"name":"layerLocation","description":"浮层的定位配置，具体见src\\core\\layerTools.js","type":"String"},{"name":"src\\mixins\\InputWidget.js","description":"value onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\ColorGrid.jsx.js","line":27,"fire":"Import src\\mixins\\InputWidget.js XXX onChange","class":""},{"file":"src\\ColorGrid.jsx.js","line":30,"structure":"ColorGridValue","example":["\n {\n     hex: <required>,\n     rgb: <optional>\n }"],"params":[{"name":"hex","description":"带#前缀的CSS颜色，六位十六进制数组成","type":"String"},{"name":"rgb","description":"RGB颜色","type":"Object","props":[{"name":"r","description":"红色通道色值","type":"Number"},{"name":"g","description":"绿色通道色值","type":"Number"},{"name":"b","description":"蓝色通道色值","type":"Number"}]}],"class":""},{"file":"src\\ColorPicker.jsx.js","line":1,"description":"颜色选择器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.2","class":""},{"file":"src\\ColorPicker.jsx.js","line":40,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"src\\mixins\\InputWidget.js","description":"value onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\ColorPicker.jsx.js","line":47,"fire":"Import src\\mixins\\InputWidget.js XXX onChange","class":""},{"file":"src\\ColorPicker.jsx.js","line":50,"structure":"ColorPickerValue","example":["\n {\n     css: <required>,\n     rgb: <required>,\n     hsl: <optional>\n }"],"params":[{"name":"css","description":"带#前缀的CSS颜色，六位十六进制数组成","type":"String"},{"name":"rgb","description":"RGB颜色","type":"Array.<Int>"},{"name":"hsl","description":"HSL颜色","type":"Array.<Float>"}],"class":""},{"file":"src\\ComboList.jsx.js","line":1,"description":"组合下拉列表","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\ComboList.jsx.js","line":17,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"label","description":"主按钮上显示的文字","type":"String"},{"name":"icon","description":"主按钮上显示的图标，具体见src/css/icon/variable.less","type":"String"},{"name":"value","description":"主按钮的值，发生点击后随事件对象返回给回调","type":"String"},{"name":"datasource","description":"列表数据源","type":"Array.<ListItemObject>"},{"name":"onClick","description":"发生点击后的回调","type":"Function"}],"class":""},{"file":"src\\ComboList.jsx.js","line":27,"structure":"Import src\\List.jsx.js ListItemObject","class":""},{"file":"src\\ComboList.jsx.js","line":30,"fire":"Import src\\components\\list\\NormalRenderer.jsx.js List onClick","class":""},{"file":"src\\Crumb.jsx.js","line":1,"description":"面包屑","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\Crumb.jsx.js","line":14,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"datasource","description":"面包屑数据源","type":"Array.<CrumbItemObject>"}],"class":""},{"file":"src\\Crumb.jsx.js","line":20,"structure":"CrumbItemObject","example":["\n {\n     href: <required>,\n     label: <required>,\n     target: <optional>\n }"],"params":[{"name":"href","description":"链接地址","type":"String"},{"name":"label","description":"链接文字","type":"String"},{"name":"target","description":"链接打开方式，同a标签target属性","type":"String"}],"class":""},{"file":"src\\DeployablePanel.jsx.js","line":1,"description":"折叠面板","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\DeployablePanel.jsx.js","line":22,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"labels","description":"话术配置","type":"Object","props":[{"name":"expand","description":"面板关闭后展开按钮的话术","type":"String"},{"name":"hide","description":"面板展开后关闭按钮的话术","type":"String"}]},{"name":"switchLocation","description":"展开关闭按钮的位置，top或bottom","type":"String"},{"name":"src\\mixins\\InputWidget.js","description":"value onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\DeployablePanel.jsx.js","line":33,"fire":"Import src\\mixins\\InputWidget.js XXX onChange","class":""},{"file":"src\\Dialog.jsx.js","line":1,"description":"对话框","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\Dialog.jsx.js","line":21,"is_constructor":1,"name":"Dialog","class":""},{"file":"src\\Dialog.jsx.js","line":30,"description":"弹出窗体","name":"pop","classname":"Dialog","params":[{"name":"param","description":"弹出配置","type":"Object","props":[{"name":"popType","description":"弹窗类型，目前支持普通弹窗和侧拉门","type":"String"},{"name":"content","description":"Dialog内部组件","type":"ReactClass"},{"name":"contentProps","description":"Dialog内部组件初始化时的属性集","type":"Object"},{"name":"className","description":"挂在到Dialog窗体DOM上的class","type":"String"},{"name":"style","description":"挂在Dialog窗体DOM上的样式表","type":"Object"},{"name":"skin","description":"Dialog皮肤","type":"String"},{"name":"appSkin","description":"Dialog初始化时，传入的系统级皮肤","type":"String"},{"name":"title","description":"Dialog标题栏中显示的标题","type":"String"},{"name":"size","description":"Dialog窗体的尺寸，与isFullScreen互斥","type":"Object","props":[{"name":"width","description":"Dialog渲染后的宽度","type":"Number"},{"name":"height","description":"Dialog渲染后的高度","type":"Number"}]},{"name":"zIndex","description":"Dialog渲染后的z-index（层次）","type":"Number"},{"name":"isFullScreen","description":"Dialog弹出后时候直接全屏显示","type":"Boolean"},{"name":"showCloseButton","description":"是否显示Dialog标题栏中的关闭按钮","type":"Boolean"},{"name":"onBeforeClose","description":"同TitleWindow props.onBeforeClose","type":"Function"},{"name":"onClose","description":"同TitleWindow props.onClose","type":"Function"}]}],"class":""},{"file":"src\\Dialog.jsx.js","line":74,"description":"关闭窗体","name":"close","classname":"Dialog","attention":"此方法直接无条件关闭并销毁窗体，不会触发任何回调函数","class":""},{"file":"src\\Dialog.jsx.js","line":88,"description":"更新content属性集","params":[{"name":"props","description":"Dialog content初始化所需要的属性集","type":"Object"}],"name":"updatePopContentProps","classname":"Dialog","attention":"此方法支持刷新param.contentProps的部分属性和新增属性，不支持删除原有属性","class":""},{"file":"src\\Dialog.jsx.js","line":113,"description":"弹出Alert提示框","params":[{"name":"param","description":"对话框属性集","type":"Object","props":[{"name":"title","description":"提示框标题","type":"String"},{"name":"message","description":"提示内容","type":"String"},{"name":"onClose","description":"关闭后的回调","type":"Function"}]}],"name":"alert","classname":"Dialog","attention":"此方法内部调用了dialog.pop","class":""},{"file":"src\\Dialog.jsx.js","line":138,"description":"弹出Confirm确认框","params":[{"name":"param","description":"对话框属性集","type":"Object","props":[{"name":"title","description":"提示框标题","type":"String"},{"name":"message","description":"提示内容","type":"String"},{"name":"onClose","description":"关闭后的回调","type":"Function"},{"name":"onEnter","description":"点击确定后的回调","type":"Function"},{"name":"onCancel","description":"点击取消后的回调","type":"Function"}]}],"name":"confirm","classname":"Dialog","attention":"此方法内部调用了dialog.pop","class":""},{"file":"src\\Dialog.jsx.js","line":166,"description":"Shoji Component Factory","params":[{"name":"param","description":"Dialog配置，见Dialog.pop注释","type":"Object"},{"name":"dialog","description":"弹出此component的dialog实例","type":"Object"}],"class":""},{"file":"src\\DropDownCalendar.jsx.js","line":1,"description":"下拉日期选择器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\DropDownCalendar.jsx.js","line":19,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"src\\Calendar.jsx.js","description":"min max","type":"Import|Properties"},{"name":"placeholder","description":"组件为选择且无初始值时，下拉按钮上显示的值","type":"String"},{"name":"openLayerType","description":"控制浮层打开的动作，onMouseEnter或onClick","type":"String"},{"name":"src\\mixins\\InputWidget.js","description":"value onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\DropDownCalendar.jsx.js","line":29,"fire":"Import src\\mixins\\InputWidget.js XXX onChange","class":""},{"file":"src\\DropDownColorPicker.jsx.js","line":1,"description":"下拉颜色选择器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.2","class":""},{"file":"src\\DropDownColorPicker.jsx.js","line":22,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"renderer","description":"显示区渲染器","type":"ReactClass"},{"name":"mode","description":"选择器的工作模式：'font'前景颜色，'background'背景颜色","type":"String"},{"name":"layerLocation","description":"下拉框的展开方式，见layer.props.location","type":"String"},{"name":"src\\mixins\\InputWidget.js","description":"value onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\DropDownColorPicker.jsx.js","line":32,"fire":"Import src\\mixins\\InputWidget.js XXX onChange","class":""},{"file":"src\\DropDownList.jsx.js","line":1,"description":"下拉列表","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.2","class":""},{"file":"src\\DropDownList.jsx.js","line":17,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"label","description":"下拉按钮上显示的文字","type":"String"},{"name":"itemRenderer","description":"列表项渲染器","type":"ReactClass"},{"name":"datasource","description":"列表数据源","type":"Array.<ListItemObject>"},{"name":"openLayerType","description":"控制浮层打开的动作，onMouseEnter或onClick","type":"String"},{"name":"hideLayerScroll","description":"是否隐藏下拉菜单的滚动条","type":"Boolean"},{"name":"layerLocation","description":"下拉框的展开方式，见layer.props.location","type":"String"},{"name":"onClick","description":"点击列表后的回调","type":"Function"}],"class":""},{"file":"src\\DropDownList.jsx.js","line":29,"structure":"Import src\\List.jsx.js ListItemObject","class":""},{"file":"src\\DropDownList.jsx.js","line":32,"fire":"Import src\\components\\list\\NormalRenderer.jsx.js List onClick","class":""},{"file":"src\\DropDownRegion.jsx.js","line":1,"description":"下拉地域选择器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\DropDownRegion.jsx.js","line":25,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"label","description":"下拉按钮上显示的文字，如果type为'single'并且value的值合法，将显示地域名称","type":"String"},{"name":"openLayerType","description":"控制浮层打开的动作，onMouseEnter或onClick","type":"String"},{"name":"readonly","description":"为true时region浮层只读。\n                          region设置为multi时，内部状态控件内部维护且由ok点击传出，不能\n                          通过不设置handler表达只读，设置额外的flag。","type":"Boolean"},{"name":"src\\Region.jsx.js","description":"type noLinkage provinceRenderer regionRenderer countryRenderer","type":"Import|Properties"},{"name":"src\\Region.jsx.js","description":"countries","type":"Import|Properties"},{"name":"src\\mixins\\InputWidget.js","description":"value onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\DropDownRegion.jsx.js","line":39,"fire":"Import src\\mixins\\InputWidget.js XXX onChange","class":""},{"file":"src\\DualTreeSelector.jsx.js","line":1,"description":"双树选择器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\DualTreeSelector.jsx.js","line":20,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"src\\Tree.jsx.js","description":"datasource onAction leafRenderer","type":"Import|Properties"},{"name":"selectorEngine","description":"选择逻辑引擎，见src\\core\\treeTools.js dualTreeSelectorEngine","type":"Object"},{"name":"src\\mixins\\InputWidget.js","description":"value onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\DualTreeSelector.jsx.js","line":27,"fire":"Import src\\mixins\\InputWidget.js XXX onChange","class":""},{"file":"src\\DualTreeSelector.jsx.js","line":30,"structure":"Import src\\Tree.jsx.js TreeItemObject","class":""},{"file":"src\\DualTreeSelector.jsx.js","line":33,"structure":"DualTreeSelectorValueTemplate","example":["\n {\n     selected: <optional>\n }"],"attention":"DualTreeSelector的value类型是字符串，用JSON.stringify方法将示例中的数据结构转换，因此操作value时不能出环","params":[{"name":"selected","description":"树的选中状态，以TreeItemObject.value为key，存在的key表示该叶子被选中","type":"Object"}],"class":""},{"file":"src\\DualTreeSelector.jsx.js","line":92,"fire":"DualTreeSelector onAction","params":[{"name":"type","description":"回调类型\nTreeExpandNode：树节点展开","type":"String"},{"name":"param","description":"回调参数","type":"Object","props":[{"name":"expand","description":"树展开节点hash; type='TreeExpandNode'","type":"Object"}]}],"class":""},{"file":"src\\DualTreeSelector.jsx.js","line":104,"fire":"DualTreeSelector onAction","params":[{"name":"type","description":"回调类型\nTreeLoadChildren：加载子树数据源","type":"String"},{"name":"param","description":"回调参数","type":"Object","props":[{"name":"index","description":"子树序列; type='TreeLoadChildren'","type":"Array.<String>"}]}],"class":""},{"file":"src\\Form.jsx.js","line":1,"description":"表单组件","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\Form.jsx.js","line":17,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"className","type":"Import|Properties"},{"name":"validations","description":"表单级别校验机，可以在这里放置跨域校验","type":"Object"},{"name":"onFieldChange","description":"表单域发生变化后的回调","type":"Function"},{"name":"onSubmit","description":"表单通过所有校验提交前触发的回调，给事件不会真正触发form向后台的提交行为","type":"Function"}],"class":""},{"file":"src\\Form.jsx.js","line":25,"fire":"form onFieldChange","params":[{"name":"param","description":"事件对象","type":"Object","props":[{"name":"targetCompontent","description":"触发事件的form实例","type":"ReactComponent"},{"name":"isValid","description":"表单是否通过了校验；该属性只在表单整体提交时存在","type":"Boolean"},{"name":"field","description":"触发change的域名，即input组件的name属性；该属性在表单整体提交时不存在","type":"String"},{"name":"dataset","description":"数据集，以field为key，以input组件的新value为值","type":"Object"},{"name":"validationResults","description":"校验结果，以field为key，以input组件上的校验机结果为值","type":"Object"}]}],"class":""},{"file":"src\\Form.jsx.js","line":34,"fire":"form onSubmit","params":[{"name":"dataset","description":"数据集，以field为key，以input组件的新value为值","type":"Object"}],"class":""},{"file":"src\\Form.jsx.js","line":83,"description":"注册表单输入域","interface":"attach","params":[{"name":"name","description":"输入域名称","type":"String"},{"name":"component","description":"输入域React组件实例","type":"ReactComponent"}],"return":{"description":"输入域是否注册成功","type":"Boolean"},"attention":"此方法一般由InputWidget调用","class":""},{"file":"src\\Form.jsx.js","line":104,"description":"解除表单输入域","interface":"detach","params":[{"name":"name","description":"输入域名称","type":"String"},{"name":"component","description":"输入域React组件实例","type":"ReactComponent"}],"attention":"此方法一般由InputWidget调用","class":""},{"file":"src\\Form.jsx.js","line":116,"description":"更新表单域","interface":"updateField","params":[{"name":"field","description":"域名称","type":"String"},{"name":"value","description":"域的新值","type":"String | Boolean | Number"},{"name":"component","description":"触发更新的React输入组件","type":"ReactComponent"}],"attention":"此方法一般由InputWidget触发，并会触发表单onFieldChange事件","class":""},{"file":"src\\Form.jsx.js","line":151,"description":"校验整个表单","interface":"validate","return":{"description":"表单校验结果","type":"FormValidationObject"},"class":""},{"file":"src\\Form.jsx.js","line":156,"structure":"FormValidationObject","example":["\n {\n     dataset: {},\n     fieldResult: {},\n     formResult: [],\n     isValid: true\n }"],"params":[{"name":"dataset","description":"Form数据集，以输入域name为key","type":"Object"},{"name":"fieldResult","description":"域校验结果，以输入域name为key，值为数组，存放该域所有校验错误结果","type":"Object"},{"name":"formResult","description":"表单级别校验结果集","type":"Array.<string>"},{"name":"isValid","description":"表单是否通过了校验，只有所有域和Form级别校验都通过，此项才为true，否则为false","type":"Boolean"}],"class":""},{"file":"src\\Layer.jsx.js","line":1,"description":"弹层","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\Layer.jsx.js","line":19,"properties":"","params":[{"name":"className","description":"添加到layer容器上类，此容器为内部容器，将添加到body中，是layer content根容器的外壳","type":"String"},{"name":"skin","description":"添加到layer容器上的皮肤","type":"String"},{"name":"style","description":"添加到layer容器上的样式表","type":"String"},{"name":"isOpen","description":"layer是否显示，如果为true，layer容器将被添加到body中","type":"Boolean"},{"name":"anchor","description":"<required>layer定位的锚点，只有设置了锚点，layer才会显示，就是说这项是必须的","type":"HtmlElement"},{"name":"location","description":"layer位置配置，配置方法见：src\\core\\layerTools.js","type":"String"},{"name":"closeWithBodyClick","description":"layer展开后，点击屏幕其他位置，layer是否自动关闭，默认false","type":"Boolean"},{"name":"fixedWidthToAnchor","description":"当layer宽度小于anchor时，是否根据anchor自适应宽度，默认true","type":"Boolean"},{"name":"onOffset","description":"layer展开后计算出显示位置，调用此回调，此回调可以对显示位置进行修正，指针方法","type":"Function"},{"name":"onMouseEnter","description":"鼠标滑入layer时的回调","type":"Function"},{"name":"onMouseLeave","description":"鼠标滑出layer时的回调","type":"Function"},{"name":"onRender","description":"layer渲染完成后的回调","type":"Function"},{"name":"onClose","description":"layer关闭后的回调","type":"Function"},{"name":"onBeforeCloseByWindow","description":"屏幕其他位置关闭前的回调","type":"Function"},{"name":"onCloseByWindow","description":"屏幕其他位置被点击导致layer关闭后触发的回调，只有closeWithBodyClick为true时有效","type":"Function"}],"class":""},{"file":"src\\Layer.jsx.js","line":37,"fire":"layer onOffset","params":[{"name":"e","description":"内部计算出的浮层将要显示的位置，可以对此对象进行指针操作","type":"Object","props":[{"name":"left","description":"浮层相对body的左边距","type":"Number"},{"name":"top","description":"浮层相对body的上边距","type":"Number"},{"name":"clockPosition","description":"1-12的字符串或空串，表示浮层相对锚点的时钟位置，具体见src\\core\\layerTools.js","type":"String"}]}],"class":""},{"file":"src\\Layer.jsx.js","line":44,"fire":"layer onMouseEnter","class":""},{"file":"src\\List.jsx.js","line":1,"description":"列表","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.2","class":""},{"file":"src\\List.jsx.js","line":17,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"datasource","description":"列表数据源","type":"Array.<ListItemObject>"},{"name":"onClick","description":"列表点击后的回调","type":"Function"},{"name":"itemRenderer","description":"列表项渲染器","type":"ReactClass"}],"class":""},{"file":"src\\List.jsx.js","line":24,"structure":"ListItemObject","example":["\n {\n     label: <required>,\n     value: <required>,\n     disabled: <optional>\n }"],"params":[{"name":"label","description":"列表项显示的文字","type":"String"},{"name":"value","description":"列表项对应的值，随事件对象通过返回","type":"String"},{"name":"disabled","description":"列表项是否可用","type":"Boolean"}],"class":""},{"file":"src\\Message.jsx.js","line":1,"description":"信息框","author":"chenxiao","version":"0.0.2.1","class":""},{"file":"src\\Message.jsx.js","line":24,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"status","description":"当前的状态,默认有5种状态值:loading, refresh, new-refresh, success, fail","type":"String"},{"name":"icon","description":"展示的icon,可自定义图标样式","type":"String"},{"name":"message","description":"展示的信息文本，如果不设置，根据status显示默认的文本","type":"String"},{"name":"autoHide","description":"是否自动消失，默认false","type":"Boolean"},{"name":"autoHideTime","description":"自动隐藏时间容迟，单位：毫秒，仅在autoHide为true时有效","type":"Number"},{"name":"buttonProps","description":"被无条件灌入到内部按钮的属性集","type":"Object"},{"name":"onRefreshClick","description":"刷新，重新加载的回调函数","type":"Function"},{"name":"onIconClick","description":"","type":"Function"}],"class":""},{"file":"src\\NumberBox.jsx.js","line":1,"description":"数字输入框","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\NumberBox.jsx.js","line":20,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"placeholder","description":"数字输入框中无内容时显示的提示文字","type":"String"},{"name":"max","description":"允许输入的最大值","type":"Number"},{"name":"min","description":"允许输入的最小值","type":"Number"},{"name":"step","description":"调节按钮点击时值跳动的步频","type":"Number"},{"name":"type","description":"输入数字的类型，float或int","type":"String"},{"name":"fixed","description":"保留的小数位数，只有当type为float时有效","type":"Number"},{"name":"showSpinButton","description":"是否显示调节按钮","type":"Boolean"},{"name":"src\\mixins\\InputWidget.js","description":"value onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\NumberBox.jsx.js","line":34,"fire":"Import src\\mixins\\InputWidget.js XXX onChange","class":""},{"file":"src\\NumberBox.jsx.js","line":124,"description":"让输入框获得焦点","interface":"focus","class":""},{"file":"src\\Pager.jsx.js","line":1,"description":"翻页器","author":"Brian Li, Han Cong","email":"lbxxlht@163.com","version":"0.0.2.3","class":""},{"file":"src\\Pager.jsx.js","line":17,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"min","description":"翻页器最小页数","type":"Number"},{"name":"max","description":"翻页器最大页数","type":"Number"},{"name":"showPageJumper","description":"是否显示跳转输入框，默认不显示","type":"Boolean"},{"name":"threshold","description":"翻页器阈值，显示时，距离value距离超过此值的按钮将被隐藏","type":"Number"},{"name":"src\\mixins\\InputWidget.js","description":"value onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\Pager.jsx.js","line":28,"fire":"Import src\\mixins\\InputWidget.js XXX onChange","class":""},{"file":"src\\Radio.jsx.js","line":1,"description":"单选框","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.2","class":""},{"file":"src\\Radio.jsx.js","line":16,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"label","description":"单选框旁边显示的文字，点击文字也可以改变选中状态","type":"String"},{"name":"value","description":"单选框的值，触发onChange时随事件对象返回，用于区分单选框的身份","type":"String"},{"name":"checked","description":"单选框是否被选中，触发onChange时随事件对象返回，用于表明单选框时候被选中","type":"Boolean"},{"name":"labelPosition","description":"文本标签显示的位置，'right'为单选框右侧，否则在左侧","type":"String"},{"name":"src\\mixins\\InputWidget.js","description":"onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\Radio.jsx.js","line":27,"fire":"Radio onChange","params":[{"name":"e","description":"React事件对象。此事件一般不需要被监听。","type":"SyntheticEvent","props":[{"name":"target","description":"组件实例的根容器","type":"HtmlElement","props":[{"name":"checked","description":"Radio是否被选中。如果onChange被触发这个值必然是true","type":"Boolean"},{"name":"value","description":"Radio的值，用于区别身份，等于this.props.value。","type":"String"}]}]}],"class":""},{"file":"src\\RangeCalendar.jsx.js","line":1,"description":"日期区间选择器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\RangeCalendar.jsx.js","line":22,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"placeholder","description":"弹出按钮默认显示的文字，如果选择了日期区间，则此项不显示","type":"String"},{"name":"max","description":"日历最大值，在这一天之后的日期不能被选定，格式：YYYY-MM-DD","type":"String"},{"name":"min","description":"日历最小值，在这一天之前的日期不能被选定，格式：YYYY-MM-DD","type":"String"},{"name":"shortCut","description":"快捷选择按钮配置","type":"Array.<CalendarShortCut>"},{"name":"rangeValidator","description":"日期区间校验机","type":"Function"},{"name":"src\\mixins\\InputWidget.js","description":"value onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\RangeCalendar.jsx.js","line":34,"fire":"Import src\\mixins\\InputWidget.js XXX onChange","class":""},{"file":"src\\RangeCalendar.jsx.js","line":37,"fire":"RangeCalendar rangeValidator","params":[{"name":"param1","description":"左侧日历的日期","type":"Date"},{"name":"param2","description":"右侧日历的日期","type":"Date"}],"return":{"description":"请返回校验结果，字符串表示校验未通过。","type":"Boolean|String"},"class":""},{"file":"src\\RangeCalendar.jsx.js","line":43,"structure":"CalendarShortCut","example":["\n {\n     label: '',                  <required>\n     getValues: function () {    <required>\n         return {\n             value1: new Date(), <required>\n             value2: new Date()  <required>\n         };\n     }\n }"],"params":[{"name":"label","description":"快捷按钮标签","type":"String"},{"name":"getValues","description":"返回值接口","type":"Function"}],"class":""},{"file":"src\\Region.jsx.js","line":1,"description":"地域选择器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\Region.jsx.js","line":20,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"type","description":"工作模式，如果是'single'标识单选，否则为多选","type":"String"},{"name":"noLinkage","description":"是否关闭联动选择，如果关闭将打断地域间的联带关系","type":"Boolean"},{"name":"provinceRenderer","description":"省渲染器","type":"ReactClass"},{"name":"regionRenderer","description":"地区渲染器","type":"ReactClass"},{"name":"countryRenderer","description":"国家渲染器","type":"ReactClass"},{"name":"countries","description":"需要显示的国家，默认全部(中国和国外)","type":"Array"},{"name":"src\\mixins\\InputWidget.js","description":"value onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\Region.jsx.js","line":33,"fire":"Import src\\mixins\\InputWidget.js XXX onChange","class":""},{"file":"src\\Schedule.jsx.js","line":1,"description":"时间选择器","author":"Brian Li, Han Bing Feng","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\Schedule.jsx.js","line":28,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"valueRenderer","description":"值渲染器","type":"ReactClass"},{"name":"prepare","description":"grid渲染器和值渲染器渲染前的属性指针回调","type":"Function"},{"name":"legendRenderer","description":"悬浮简介框渲染器","type":"ReactClass"},{"name":"flags","description":"开关对象","type":"Object","props":[{"name":"enableRowSelector","description":"是否开启行选择器","type":"Boolean"},{"name":"enableColumnSelector","description":"是否开启列选择器","type":"Boolean"}]},{"name":"onScheduleSelected","description":"鼠标选中某片区域后的回调","type":"Function"},{"name":"src\\mixins\\InputWidget.js","description":"value onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"},{"name":"axisYFactory","description":"自定义纵坐标","type":"Function"},{"name":"axisXFactory","description":"自定义横坐标","type":"Function"}],"class":""},{"file":"src\\Schedule.jsx.js","line":43,"fire":"Import src\\mixins\\InputWidget.js XXX onChange","class":""},{"file":"src\\Schedule.jsx.js","line":114,"fire":"schedule onScheduleSelected","params":[{"name":"e","description":"原生DOM事件对象","type":"Event"},{"name":"param","description":"参数对象","type":"Object","props":[{"name":"cursorDOM","description":"schedule的虚拟可变形光标","type":"HtmlElement"},{"name":"targetComponent","description":"触发事件的组件实例","type":"ReactComponent"},{"name":"selectedRange","description":"选中区域对象","type":"ScheduleRange"}]}],"class":""},{"file":"src\\Schedule.jsx.js","line":122,"structure":"Import src\\core\\scheduleTools.js ScheduleRange","class":""},{"file":"src\\SearchBox.jsx.js","line":1,"description":"搜索框","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\SearchBox.jsx.js","line":18,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"placeholder","description":"文本框中无内容时显示的提示文字","type":"String"},{"name":"mode","description":"搜索组件模式，withButton为带button的搜索框","type":"String"},{"name":"onFocus","description":"输入框获取焦点后的回调","type":"Function"},{"name":"onBlur","description":"输入框失去焦点后的回调","type":"Function"},{"name":"src\\mixins\\InputWidget.js","description":"value onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"},{"name":"onClick","description":"搜索按钮点击时的回调","type":"Function"}],"class":""},{"file":"src\\SearchBox.jsx.js","line":30,"fire":"Import src\\mixins\\InputWidget.js XXX onChange","class":""},{"file":"src\\SearchBox.jsx.js","line":33,"fire":"Import src\\Button.jsx.js button onClick","class":""},{"file":"src\\Select.jsx.js","line":1,"description":"选择器","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\Select.jsx.js","line":19,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"placeholder","description":"组件为选择且无初始值时，下拉按钮上显示的值","type":"String"},{"name":"openLayerType","description":"控制浮层打开的动作，onMouseEnter或onClick","type":"String"},{"name":"datasource","description":"列表数据源","type":"Array.<ListItemObject>"},{"name":"itemRenderer","description":"列表项渲染器","type":"ReactClass"},{"name":"src\\mixins\\InputWidget.js","description":"value onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\Select.jsx.js","line":30,"structure":"Import src\\List.jsx.js ListItemObject","class":""},{"file":"src\\Select.jsx.js","line":33,"fire":"Import src\\mixins\\InputWidget.js XXX onChange","class":""},{"file":"src\\ShojiScreen.jsx.js","line":1,"description":"侧拉门","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","note":"Shoji <日> n.障子，日本房屋用的纸糊木框，亦作shoji screen。如用木框糊纸的拉窗、拉门、纸拉窗、纸拉门。","class":""},{"file":"src\\ShojiScreen.jsx.js","line":23,"properties":"","params":[{"name":"className","description":"添加到ShojiScreen容器上的类，此容器为内部容器，将添加到body中，是ShojiScreen content根容器的外壳","type":"String"},{"name":"skin","description":"挂在ShojiScreen容器上的皮肤","type":"Object"},{"name":"workspaceWidth","description":"ShojiScreen工作区宽度","type":"Number"},{"name":"isOpen","description":"ShojiScreen是否显示，如果为true，layer容器将被添加到body中","type":"Boolean"},{"name":"footBarInnerHtml","description":"写入Shoji下部按钮后面的html","type":"String"},{"name":"showFootBar","description":"是否显示底部按钮栏","type":"Boolean"},{"name":"buttonLabels","description":"按钮话术","type":"Object","props":[{"name":"enter","description":"确定按钮","type":"String"},{"name":"cancel","description":"取消按钮","type":"String"},{"name":"expand","description":"展开按钮","type":"String"},{"name":"hide","description":"隐藏按钮","type":"String"}]},{"name":"onAction","description":"功能回调接口","type":"Function"},{"name":"onRender","description":"ShojiScreen渲染完成后的回调","type":"Function"},{"name":"onBeforeClose","description":"ShojiScreen关闭前触发的回调，可以在这个回调中阻止窗体关闭","type":"Function"},{"name":"onClose","description":"ShojiScreen关闭后的回调","type":"Function"}],"class":""},{"file":"src\\ShojiScreen.jsx.js","line":41,"fire":"Import src\\TitleWindow.jsx.js TitleWindow onBeforeClose","class":""},{"file":"src\\ShojiScreen.jsx.js","line":44,"fire":"ShojiScreen onAction","params":[{"name":"type","description":"回调类型：\n'EnterButtonClick'   确定按钮被点击\n'CancelButtonClick'  取消按钮被点击\n'HideButtonClick'    收起按钮被点击\n'ExpandButtonClick'  展开按钮被点击","type":"String"}],"class":""},{"file":"为 React child components 提供'oneux4'的appSkin值刀到child context type中","line":1,"class":""},{"file":"src\\Slider.jsx.js","line":1,"description":"数值滑竿","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\Slider.jsx.js","line":22,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"max","description":"最大值","type":"Number"},{"name":"min","description":"最小值","type":"Number"},{"name":"step","description":"滑动后最小变动值","type":"Number"},{"name":"type","description":"数字的类型，float或int","type":"String"},{"name":"fixed","description":"保留的小数位数，只有当type为float时有效","type":"Number"},{"name":"onDrag","description":"拖拽时的回调函数","type":"Function"},{"name":"measure","description":"说明框上显示的单位","type":"String"},{"name":"showLabel","description":"是否显示说明框","type":"Boolean"},{"name":"showRangeLabel","description":"是否显示Range值","type":"Boolean"},{"name":"src\\mixins\\InputWidget.js","description":"value onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\Slider.jsx.js","line":38,"fire":"Import src\\mixins\\InputWidget.js XXX onChange","class":""},{"file":"src\\Switch.jsx.js","line":1,"description":"开关","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.2","class":""},{"file":"src\\Switch.jsx.js","line":16,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"labels","description":"话术配置","type":"Object","props":[{"name":"on","description":"开启时的话术","type":"String"},{"name":"off","description":"关闭时的话术","type":"String"}]},{"name":"value","description":"开关的值，触发onChange时随事件对象返回，用于区分开关的身份","type":"String"},{"name":"checked","description":"开关是否开启，触发onChange时随事件对象返回，用于表明开关是否开启","type":"Boolean"},{"name":"src\\mixins\\InputWidget.js","description":"onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\Switch.jsx.js","line":27,"fire":"Switch onChange","params":[{"name":"e","description":"React事件对象","type":"SyntheticEvent","props":[{"name":"target","description":"组件实例的根容器","type":"HtmlElement","props":[{"name":"value","description":"switch的值，'on'或'off'","type":"String"}]}]}],"class":""},{"file":"src\\Tab.jsx.js","line":1,"description":"标签导航","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.2","class":""},{"file":"src\\Tab.jsx.js","line":18,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"datasource","description":"标签导航数据源","type":"Array.<ListItemObject>"},{"name":"renderer","description":"标签渲染器","type":"ReactClass"},{"name":"src\\mixins\\InputWidget.js","description":"value onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\Tab.jsx.js","line":27,"structure":"Import src\\List.jsx.js ListItemObject","class":""},{"file":"src\\Tab.jsx.js","line":30,"fire":"Import src\\mixins\\InputWidget.js XXX onChange","class":""},{"file":"src\\Table.jsx.js","line":1,"description":"表格","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\Table.jsx.js","line":24,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"fieldConfig","description":"表格列配置","type":"Array.<TableFieldObject>"},{"name":"flags","description":"表格附属功能开关集合","type":"Object","props":[{"name":"sortEnable","description":"是否显示排序按钮，默认false","type":"Boolean"},{"name":"showHeader","description":"是否显示表头，默认false","type":"Boolean"},{"name":"showMessage","description":"是否显示通知栏","type":"Boolean"},{"name":"showSummary","description":"是否在表头下方显示汇总栏，默认false","type":"Boolean"},{"name":"showGroupNameInHeader","description":"是否在表头显示列的分组名称，默认false","type":"Boolean"},{"name":"showHorizontalScroll","description":"是否显示横向滚动条。\n若开启此功能，表格左侧连续设定为fxied的列，不随横向滚动条滚动，永远固定在左侧。","type":"Boolean"},{"name":"showSelector","description":"是否在第一列显示行选择器，默认false，不建议使用，改在fieldConfig中添加。此属性改为配置选择器工作模式：\n  false|0: 关闭\n   true|1: 开启\n        2: 只选择当前页\n        3: 只选择全部","type":"Boolean"}]},{"name":"datasource","description":"表格数据源","type":"Array.<Object>"},{"name":"summary","description":"表格汇总信息的数据源","type":"Object"},{"name":"message","description":"表格信息栏的数据源","type":"Object","props":[{"name":"content","description":"信息栏中显示的信息，不制定，信息栏将不会显示","type":"String"},{"name":"buttonLabel","description":"信息栏中紧随信息文本的按钮标签，点击此按钮会通过onAction回调TableMessageBarClick事件","type":"String"}]},{"name":"fixedPosition","description":"当body滚动条发生滚动事，满足条件后位置固定的元素配置信息","type":"Array.<FixedObject>"},{"name":"noDataRenderer","description":"表格无数据时的渲染器","type":"ReactClass"},{"name":"onAction","description":"表格控制回调总线","type":"Function"},{"name":"src\\mixins\\InputWidget.js","description":"value onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\Table.jsx.js","line":55,"structure":"TableFieldObject","example":["\n {\n     isSelector: <optional>\n     label: <optional>\n     field: <optional>\n     content: function (dataItem, rowIndex, columnIndex, tableComponent)) <optional>\n     renderer: <optional>\n     disabled: <optional>\n     groupName: <optional>\n     isEmptyHeader: <optional>\n     thRenderer: <optional>\n     prepare: function (tdRendererProps, dataItem, rowIndex, columnIndex, tableComponent) <optional>\n }"],"attention":"TableFieldObject中，除function类型的值，其他数据都会无条件灌入renderer中，\n以下属性除外：item, row, column, key, onAction","params":[{"name":"isSelector","description":"该列是否是选择器，如果为true，其他配置除width外均无效","type":"Boolean"},{"name":"label","description":"显示在表头的列名","type":"String"},{"name":"field","description":"域名称，如果不设置content属性，会根据此属性最终content的值","type":"String"},{"name":"content","description":"列显示的数据域或域处理函数；如果为字符串，则此处会被替换为dataItem[content]。如果是函数，此处将被替换函数的返回值。","type":"String|Function"},{"name":"renderer","description":"列单元格渲染器","type":"ReactClass"},{"name":"disabled","description":"该列是否禁用","type":"Boolean"},{"name":"groupName","description":"该列的分组名称","type":"Boolean"},{"name":"isEmptyHeader","description":"表头是否留空，如果为true，则thRenderer无效","type":"Boolean"},{"name":"thRenderer","description":"列表头渲染器","type":"ReactClass"},{"name":"prepare","description":"单元格renderer渲染前，生成的props属性集以及一些其他参数会以指针形式调用此回调。\n在这个回调中，可以对props做任意修改。\nfunction prepare(props, item, row, column, me) {}\n     props   {Object} 用于渲染单元格的属性集\n     item    {Object} 单元格所在行的数据源\n     row     {Number} 单元格行号\n     column  {Number} 单元格所在列号\n     me      {ReactComponent} 表格组件实例","type":"Function"}],"class":""},{"file":"src\\Table.jsx.js","line":92,"structure":"FixedObject","example":["\n {\n     ref: <required>\n     top: <required>\n     zIndex: <optional>\n }"],"params":[{"name":"ref","description":"将被固定的dom的ref属性值","type":"String"},{"name":"top","description":"当dom在屏幕中的显示位置，上边框到window顶部（注意不是body顶部）距离小于top时，将被固定","type":"Number"},{"name":"zIndex","description":"如果有多个dom要被固定，zIndex用来约束他们的层次顺序","type":"Number"}],"class":""},{"file":"src\\Table.jsx.js","line":104,"structure":"TableValueTemplate","example":["\n {\n     sortField: <optional>\n     sortType: <optional>\n     selected: <optional>\n     indeterminate: <optional>\n }"],"attention":"table的value类型是字符串，用JSON.stringify方法将示例中的数据结构转换，因此操作value时不能出环","params":[{"name":"sortField","description":"table当前排序的列名","type":"String"},{"name":"sortType","description":"table当前排序的类型","type":"String"},{"name":"selected","description":"table当前选中的元素的行号集合，如果此项为-1，则标识table被全选","type":"Array.<Number> | Number"},{"name":"indeterminate","description":"table当前处于半选状态的行","type":"Array.<Number>"}],"class":""},{"file":"src\\Table.jsx.js","line":119,"fire":"Import src\\mixins\\InputWidget.js XXX onChange","class":""},{"file":"src\\Table.jsx.js","line":122,"fire":"table onAction","params":[{"name":"style","description":"回调类型","type":"String"},{"name":"param","description":"回调参数","type":"Object"}],"class":""},{"file":"src\\TextArea.jsx.js","line":1,"description":"文本域","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\TextArea.jsx.js","line":22,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"placeholder","description":"文本域中无内容时显示的提示文字","type":"String"},{"name":"inputBoxStyle","description":"输入框中字体的样式","type":"Object"},{"name":"onFocus","description":"输入框获取焦点后的回调","type":"Function"},{"name":"onBlur","description":"输入框失去焦点后的回调","type":"Function"},{"name":"src\\mixins\\InputWidget.js","description":"value onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\TextArea.jsx.js","line":33,"fire":"Import src\\mixins\\InputWidget.js XXX onChange","class":""},{"file":"src\\TextArea.jsx.js","line":62,"description":"让文本域获得焦点","interface":"focus","class":""},{"file":"src\\TextBox.jsx.js","line":1,"description":"文本输入框","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\TextBox.jsx.js","line":17,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"placeholder","description":"文本框中无内容时显示的提示文字","type":"String"},{"name":"count","description":"文本框右侧显示的输入长度统计信息，此信息由外界配入","type":"String"},{"name":"onFocus","description":"输入框获取焦点后的回调","type":"Function"},{"name":"onBlur","description":"输入框失去焦点后的回调","type":"Function"},{"name":"src\\mixins\\InputWidget.js","description":"value onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\TextBox.jsx.js","line":28,"fire":"Import src\\mixins\\InputWidget.js XXX onChange","class":""},{"file":"src\\TextBox.jsx.js","line":75,"description":"让输入框获得焦点","interface":"focus","class":""},{"file":"src\\TextLine.jsx.js","line":1,"description":"行号文本域","author":"Hao Cuicui","version":"0.0.2.1","class":""},{"file":"src\\TextLine.jsx.js","line":21,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"placeholder","description":"文本域中无内容时显示的提示文字","type":"String"},{"name":"onFocus","description":"输入框获取焦点后的回调","type":"Function"},{"name":"onBlur","description":"输入框失去焦点后的回调","type":"Function"},{"name":"src\\mixins\\InputWidget.js","description":"value onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\TextLine.jsx.js","line":31,"fire":"Import src\\mixins\\InputWidget.js XXX onChange","class":""},{"file":"src\\TextLine.jsx.js","line":88,"description":"让文本域获得焦点","interface":"focus","class":""},{"file":"src\\Tip.jsx.js","line":1,"description":"提示","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.2","class":""},{"file":"src\\Tip.jsx.js","line":17,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"title","description":"弹出提示的标题","type":"String"},{"name":"content","description":"弹出提示的内容，可以含有html标签","type":"String"},{"name":"icon","description":"提示组件外部显示的图标，具体见src/css/icon/variable.less","type":"String"},{"name":"renderer","description":"Tip内部渲染的组件，如果指定，icon属性无效","type":"ReactClass"},{"name":"renderProps","description":"Tip内部组件渲染的属性集","type":"Object"},{"name":"layerLocation","description":"浮层的定位配置，具体见src\\core\\layerTools.js","type":"String"},{"name":"contentFactory","description":"浮层展开前，可以通过此属性方法获取新的content","type":"Function"},{"name":"onOffset","description":"浮层位置修正回调","type":"Function"},{"name":"layerClassName","description":"浮层的自定义样式","type":"Function"}],"class":""},{"file":"src\\Tip.jsx.js","line":30,"fire":"Import src\\Layer.jsx.js layer onOffset","class":""},{"file":"src\\TitleWindow.jsx.js","line":1,"description":"弹窗","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.1","class":""},{"file":"src\\TitleWindow.jsx.js","line":18,"properties":"","params":[{"name":"className","description":"添加到TitleWindow容器上的类，此容器为内部容器，将添加到body中，是TitleWindow content根容器的外壳","type":"String"},{"name":"skin","description":"挂在TitleWindow容器上的皮肤","type":"Object"},{"name":"isOpen","description":"TitleWindow是否显示，如果为true，layer容器将被添加到body中","type":"Boolean"},{"name":"title","description":"TitleWindow标题栏中显示的标题","type":"String"},{"name":"size","description":"TitleWindow窗体的尺寸，与isFullScreen互斥","type":"Object","props":[{"name":"width","description":"TitleWindow渲染后的宽度","type":"Number"},{"name":"height","description":"TitleWindow渲染后的高度","type":"Number"}]},{"name":"zIndex","description":"TitleWindow渲染后的z-index（层次）","type":"Number"},{"name":"isFullScreen","description":"TitleWindow弹出后时候直接全屏显示：true，全屏；'height'，高度全屏宽度自适应；'width'，宽度全屏高度自适应；其他，自适应","type":"Boolean"},{"name":"isAutoResize","description":"TitleWindow是否根据内容变化自动调整宽度","type":"Boolean"},{"name":"showCloseButton","description":"是否显示TitleWindow标题栏中的关闭按钮","type":"Boolean"},{"name":"onRender","description":"TitleWindow渲染完成后的回调","type":"Function"},{"name":"onBeforeClose","description":"TitleWindow关闭前触发的回调，可以在这个回调中阻止窗体关闭","type":"Function"},{"name":"onClose","description":"TitleWindow关闭后的回调","type":"Function"}],"class":""},{"file":"src\\TitleWindow.jsx.js","line":35,"fire":"TitleWindow onBeforeClose","params":[{"name":"e","description":"JS原生UI事件对象","type":"UIEvents","props":[{"name":"returnValue","description":"可以通过param1.returnValue = false的方法阻止继续关闭","type":"Boolean"},{"name":"targetComponent","description":"当前组件实例","type":"ReactComponent"}]}],"class":""},{"file":"src\\Toast.jsx.js","line":1,"description":"全局提示","author":"zhangjialin","version":"0.0.2.1","note":"全局展示操作反馈信息，居中显示并自动消失，单例模式，可提供“成功”等反馈信息","class":""},{"file":"src\\Toast.jsx.js","line":43,"is_constructor":1,"name":"Toast","class":""},{"file":"src\\Toast.jsx.js","line":59,"description":"弹出窗体","name":"pop","classname":"Toast","params":[{"name":"param","description":"弹出配置","type":"Object","props":[{"name":"className","description":"挂在到Toast窗体DOM上的class","type":"String"},{"name":"type","description":"当前的状态,默认返回success样式","type":"String"},{"name":"icon","description":"展示的icon,可自定义图标样式","type":"String"},{"name":"message","description":"展示的信息文本，默认为'保存成功',配置message后type原有话术将被替换","type":"String"},{"name":"size","description":"Toast的宽高","type":"Object","props":[{"name":"width","description":"宽度","type":"Number"},{"name":"height","description":"高度","type":"Number"}]},{"name":"subComponent","description":"传入React组件，作为Toast的内容","type":"Object"},{"name":"subComponentProps","description":"subComponent初始化事传入的props","type":"Object"},{"name":"subComponentCloseHandlerName","description":"透传给subComponent的关闭事件属性名","type":"String"},{"name":"autoHideTime","description":"自动隐藏时间容迟，单位：毫秒，如果设置为0，不自动关闭","type":"Number"},{"name":"onClose","description":"Toast关闭的回调函数","type":"Function"}]}],"class":""},{"file":"src\\Tree.jsx.js","line":1,"description":"树","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.2","class":""},{"file":"src\\Tree.jsx.js","line":16,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"datasource","description":"树数据源","type":"Array.<TreeItemObject>"},{"name":"onAction","description":"树回调总线","type":"Function"},{"name":"leafRenderer","description":"树叶子渲染器","type":"ReactClass"},{"name":"src\\mixins\\InputWidget.js","description":"value onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\Tree.jsx.js","line":25,"fire":"Import src\\mixins\\InputWidget.js XXX onChange","class":""},{"file":"src\\Tree.jsx.js","line":28,"fire":"Tree onAction","params":[{"name":"type","description":"回调类型：","type":"String"},{"name":"param","description":"回调参数","type":"Object"}],"class":""},{"file":"src\\Tree.jsx.js","line":33,"fire":"Import src\\mixins\\TreeNodeBase.js Tree onAction","class":""},{"file":"src\\Tree.jsx.js","line":36,"structure":"TreeItemObject","example":["\n {\n     label: <required>,\n     value: <required>,\n     children: <optional>\n }"],"params":[{"name":"label","description":"叶子显示的文字","type":"String"},{"name":"value","description":"叶子对应的值，随事件对象通过返回","type":"String"},{"name":"children","description":"子树数据源","type":"Array.<TreeItemObject>"}],"class":""},{"file":"src\\Tree.jsx.js","line":48,"structure":"TreeValueTemplate","example":["\n {\n     expand: <optional>\n }"],"attention":"tree的value类型是字符串，用JSON.stringify方法将示例中的数据结构转换，因此操作value时不能出环","params":[{"name":"expand","description":"树的展开状态，以TreeItemObject.value为key，存在的key表示该子树的根层级为展开状态","type":"Object"}],"class":""},{"file":"src\\WarningLayer.jsx.js","line":1,"description":"警告提示浮层","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.2","class":""},{"file":"src\\WarningLayer.jsx.js","line":43,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"message","description":"警告信息","type":"String"},{"name":"src\\Layer.jsx.js","description":"anchor location onOffset","type":"Import|Properties"},{"name":"onClick","description":"点击layer后执行的回调","type":"Function"}],"class":""},{"file":"src\\WarningLayer.jsx.js","line":50,"fire":"Import src\\Layer.jsx.js layer onOffset","class":""},{"file":"src\\Wizard.jsx.js","line":1,"description":"向导","author":"Brian Li","email":"lbxxlht@163.com","version":"0.0.2.2","class":""},{"file":"src\\Wizard.jsx.js","line":18,"properties":"","params":[{"name":"src\\core\\componentTools.js","description":"skin className style disabled","type":"Import|Properties"},{"name":"datasource","description":"向导标签文字列表","type":"Array.<String>"},{"name":"src\\mixins\\InputWidget.js","description":"value onChange name validations customErrorTemplates valueTemplate","type":"Import|Properties"}],"class":""},{"file":"src\\Wizard.jsx.js","line":26,"fire":"Import src\\mixins\\InputWidget.js XXX onChange","class":""}]};});